<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>船</title>
      <link href="/posts/19574161/"/>
      <url>/posts/19574161/</url>
      
        <content type="html"><![CDATA[<p>家是什么？</p><p>有人说：家就是一家人，家人在哪，家就在哪，</p><p>也有人说：家是心灵的港湾，它是心灵的避风港。</p><p>可是对于我来说，它有很多种定义。</p><h2 id="正文">正文</h2><p>我曾经认为“家”是一间小屋子，每天我就在这名为“家”的小屋子里和奶奶一起生活，早上奶奶会在我还熟睡的时候偷偷的爬起床来，锁上房门去河边洗衣裳，而我在睡醒发现身旁没人之后，我会爬到窗边躲在那乌漆漆的“家”里又哭又喊，我对”家“外面的世界充满好奇。</p><p>后来“家”变大了，“家“里面多了陌生又熟悉的人，也多了陌生的人，熟悉的环境突然发生了改变，让我很不适应，渐渐地，我也习惯了，在适应了之后我也很欢喜这么一个新的环境，新的人。在我短暂的人生当中，好景似乎都不长，熟悉了的陌生人很快就离开了，我也开始理解了，生命是个很脆弱的东西，我好像也失去了一些东西，我对很多的东西都失去了兴趣，我害怕有些人走进我的心里就出不去。</p><p>再后来，”家“好像要散了，我好像不是很在意，我在意的人在，只要她们在，我的“家”就不会，不过它没有散，一切也在继续。在这个时候，我遇到了一个人，她总是粘着我，我很抗拒这个突然闯入我生活的人，最终，她还是住进了我的心里。可是我们对于”家“的定义不一样，她还是离开了，但是她却没搬出去。我也开始怀疑，”家“好像不是纯粹的两个人在一起。虽然如此，我还是觉得”家“是温暖的，回到家里有热腾腾的饭菜，有人在”家“里等我。</p><p>鸟儿总是要飞向天空，鱼儿总是要游向大海。我慢慢的长大，“家”好像对于我来说变小了，我也总归是要走出去。我终于是迈出了走出家门的第一步，从一个小世界到了大世界，外面的世界是残酷的，外面并不如同家里四季如春，它满是风雨，我如同一个孩童，跳入了这个名为“社会”的冰冷大海中，所幸的是，我已经学会了游泳，不至于沉入水底。冰冷的海水告诉我，我不能一直待在水里，我必须回到陆地，于是，我想回头了，重新回到名为“家”的陆地。</p><p>在我回头的时候，我发现原来根本没有陆地，“家”不是避风港也不是陆地，它像一艘船，一艘破破烂烂的船，有人在冰冷的海水里托着它摇摇曳曳的前进，附近没有岛屿，只有大海茫茫，大浪也好像要打过来了。上面的人说：”孩子，去找条新船吧！“，我心里也明白，我该找条新船了，可是我去哪里找条新船呢？我不能回去也不想再回去。所有下了海的人不是拼命的游啊游，就是淹死在了海里，我开始害怕了，旧的船好像要沉了，可是我现在既不会修船，也找不到新船，更加可怕的是，我看到船前进的方向好像布满暗礁，可是决定船怎么开的不是我。</p><p>海水让我的身心冰冷以至于让我开始出现幻觉，我感觉海水不那么冰冷刺骨了，也不再害怕淹死在了海里，既然不管是待在破船上还是在海里最终都要沉没，不如游向远方，脚底虽然不踏实，自己决定自己去哪儿，反正船就那样了。</p><hr><p>人不变，事不变，这就是命运。</p><p>没有脚的鸟，只有不停的飞才不会落地。</p><p>游吧，游吧，游到哪就是哪。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac上运行Pkhex</title>
      <link href="/posts/299de451/"/>
      <url>/posts/299de451/</url>
      
        <content type="html"><![CDATA[<p>对于宝可梦玩家来说，使用魔法来调整宠物的属性几乎是必须的（除非你浑身是肝，或者你只是一个pve玩家），Pkhex因为是基于<code>.NET</code>开发，所以在Windows上使用它是十分方便的，但是在Linux以及mac则需要借助wine，因为我使用的是mac系统，下面将介绍如何在mac上使用pkhex。</p><h2 id="安装xquartz">安装XQuartz</h2><p><a href="https://www.xquartz.org/">xquartz</a>是wine的依赖，想要安装wine，它是必须的。</p><h2 id="安装wine">安装wine</h2><p>下载<a href="https://dl.winehq.org/wine-builds/macosx/download.html">WineDevelopment</a>应用程序</p><h2 id="安装最新版.net">安装最新版.NET</h2><p>下载最新版本的<a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0">.NET</a>，右键单击文件，转到“打开方式...”并选择Wine Devel</p><blockquote><p>tip: 强烈建议将打开 .exe 文件的应用程序更改为 Wine Devel。右键单击&gt; 获取信息 &gt; 打开方式 - 并从弹出列表中选择“Wine Devel”</p><p>如果 Wine Devel 呈灰色，请取消勾选“推荐应用”并选择 WineDevel。从现在起，任何 .exe 文件都将自动使用 Wine Devel 打开</p></blockquote><h2 id="使用pkhex">使用Pkhex</h2><p>下载<a href="https://projectpokemon.org/home/files/file/2774-pkhex-for-mac/">PKHeXfor Mac</a>并将其拖到您的应用程序文件夹并打开</p><p>大功告成🎉</p><h2 id="后记">后记</h2><p>其他使用修改Pkhex的方法</p><p><a href="https://github.com/arleypadua/PKHeX.CLI/releases">只需在此处</a>下载适用于 Linux 的工件，解压缩并在控制台中运行命令 pkhex-cli</p><blockquote><p>了解更多信息，这是带有自述文件的项目源代码</p><p>https://github.com/arleypadua/PKHeX.CLI</p></blockquote><p>基于网络的版本：</p><p><a href="https://pkhex-web.github.io/">https://pkhex-web.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> game </category>
          
          <category> pokemon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> pokemon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Butterfly增加文章双栏布局</title>
      <link href="/posts/9f9978a1/"/>
      <url>/posts/9f9978a1/</url>
      
        <content type="html"><![CDATA[<h2 id="安装插件">安装插件</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">cnpm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></tbody></table></figure><h2 id="修改站点配置">修改站点配置</h2><p>修改站点根目录下的配置文件<code>_config.yml</code></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">butterfly_article_double_row:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h2 id="部署">部署</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></tbody></table></figure><p>查看效果</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客底层原理</title>
      <link href="/posts/d24d3c28/"/>
      <url>/posts/d24d3c28/</url>
      
        <content type="html"><![CDATA[<p>在B站通过up主程序羊了解到了Hexo，并且通过视频教程一步步搭建了个人博客，逞着兴趣正浓，网上看了许多关于Hexo的有关资料，对Hexo有了更多的了解。</p><blockquote><p>Hexo的优缺点</p></blockquote><p>优点：</p><ul><li>生态丰富，主题多</li><li>相关文档多，解决bug有优势</li><li>通过修改yaml配置文件修改样式简单</li></ul><p>缺点：</p><ul><li>初次配置会遇到很多bug，对新生和非专业人员不友好</li><li>每次发布文章都需要重新部署，没有后台管理系统</li></ul><p>相当一部分Hexo是搭建在LNMP或LAMP环境下，LNMP指linux+nginx+mysql+php,这是一款非常强大的环境套件，nginx以其轻量而高效受到建站者青睐。</p><h2 id="github-page">Github page</h2><p>Hexo搭建的博客项目源码托管在github，并享受github pages服务。</p><p>GitHubpages简称pages服务，每个仓库都有一个pages服务，可用来展示项目，通过简单的设置项目的index.html，并以此做为入口供用户参观访问。可是一个相当实用的功能呀！大部分的pages服务都是用来搭建个人博客的。言外之意不仅能搭建博客，还能做些其他的事情~</p><p>为什么需要Pages技术</p><p>生成博客的页面有动、静态页面之分</p><p>著名的博客 wordpress ，既是动态页面生成的博客，其思路是php+Mysql</p><p>博客hexo生成的是静态页面，而Githubpages又支持静态页面的解析。因此二者一拍即合能够用来生成html拼合成博客。</p><blockquote><p>静态页面意味着评论、分享功能依赖第三方插件，但它带来的轻量、高效是动态页面不及的！</p></blockquote><h2 id="hexo">Hexo</h2><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/8/12/1a5437eb122fc14fc88b1920aed5dcca~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" alt="hexo官网">hexo官网</p><p>在 Hexo 的官网，我们可以直观的看到对 Hexo的介绍：<strong>快速、简洁且高效的博客框架</strong></p><p>在 Hexo 的文档中，我们可以找到官方对 Hexo 的定义：</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>在官方文档中安装了 Hexo 中我们就安装了Hexo，然后我们就可以看到文档结构如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml      // 站点配置文件</span><br><span class="line">├── db.json          // 缓存文件</span><br><span class="line">├── node_modules     // 安装的插件以及hexo所需的一些nodejs模块</span><br><span class="line">├── package.json     // 项目的依赖文件</span><br><span class="line">├── scaffolds        // 模版文件</span><br><span class="line">├── source           // 源文件，用来存放你的文章 md 文件</span><br><span class="line">└── themes           // 主题文件</span><br></pre></td></tr></tbody></table></figure><p>然后我们可以安装主题，比我我安装的 NexT 主题，安装完之后会在<code>themes</code> 下面产生一个 next文件存放主题中的内容，文档结构如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.en.md       // READEME 英文版</span><br><span class="line">├── README.md          // READEME 中文文件</span><br><span class="line">├── _config.yml        // 主题配置文件</span><br><span class="line">├── bower.json</span><br><span class="line">├── gulpfile.coffee</span><br><span class="line">├── languages         // 多语言配置文件</span><br><span class="line">├── layout            // 模板文件</span><br><span class="line">├── package.json      // 项目的依赖文件</span><br><span class="line">├── scripts           // 主题的脚本文件</span><br><span class="line">├── source            // 主题的资源文件 CSS IMG</span><br><span class="line">└── test</span><br></pre></td></tr></tbody></table></figure><h2 id="hexo-的工作原理">Hexo 的工作原理</h2><p>这里我们来分析一下 Hexo 每次部署的流程</p><ol type="1"><li>hexog：生成静态文件。将我们的数据和界面相结合生成静态文件的过程。会遍历主题文件中的<code>source</code> 文件夹（js、css、img等静态资源），然后建立索引，然后根据索引生成 <code>pubild</code>文件夹中，此时的 <code>publid</code> 文件是由 html、 js、css、img建立的纯静态文件可以通过 <code>index.html</code>作为入口访问你的博客。</li><li>hexo d：部署文件。部署主要是根据在 <code>_config.yml</code> 中配置的<code>git</code> 仓库或者 <code>coding</code> 的地址，将<code>public</code> 文件上传至 github 或者 coding 中。然后再根据上面的github 提供的 pages 服务呈现出页面。当然你也可以直接将你生成的<code>public</code> 文件上传至你自己的服务器上。</li></ol><h2 id="hexo-的模板引擎">Hexo 的模板引擎</h2><blockquote><p>模板引擎的作用，就是将界面与数据分离。最简单的原理是将模板内容中指定的地方替换成数据，实现业务代码与逻辑代码分离。</p></blockquote><p>我们可以注意到，在 Hexo 中，<code>source</code> 文件夹和<code>themes</code> 文件夹是在同级的，我们就可以将 <code>source</code>文件夹理解为数据库，而主题文件夹相当于 界面。然后我们<code>hexo g</code> 就将我们的数据和界面相结合生成静态文件<code>public</code>。</p><p>Hexo 的模板引擎是默认使用 ejs 编写的。hexo首先会解析 md文件，然后根据 layout判断布局类型，再调用其他的文件，这样每一块的内容都是独立的，提高代码的复用性。最终会生成一个html 页面。</p><p>模板文件在 <code>layout</code> 文件夹下，<code>layout</code>文件文档结构如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _custom                           // 通用布局</span><br><span class="line">├── _layout.swig                      // 默认布局布局</span><br><span class="line">├── _macro                            // 插件模板</span><br><span class="line">├── _partials                         // 局部布局</span><br><span class="line">├── _scripts                          // script模板</span><br><span class="line">├── _third-party                      // 第三方插件模板</span><br><span class="line">├── archive.swig                      // 归档模板</span><br><span class="line">├── category.swig                     // 分类模板</span><br><span class="line">├── index.swig                        // 首页模板</span><br><span class="line">├── page.swig                         // 其他模板</span><br><span class="line">├── photo.swig                        // 照片模板（自定义）</span><br><span class="line">├── post.swig                         // 文章模板</span><br><span class="line">├── schedule.swig                     // 归档模板</span><br><span class="line">└── tag.swig                          // 标签模板</span><br></pre></td></tr></tbody></table></figure><blockquote><p>每个模板都默认使用layout布局，您可在文章的前置申明中指定其他布局，比如“post”或者“page”或是设为false来关闭布局功能（如果不填默认是post，这个在_config.yml中可以设置默认值），您甚至可在布局中再使用其他布局来建立嵌套布局。</p></blockquote><p>在我们新建页面或者新建文章的使用可以选定我们使用的模板。<code>hexo new [layout] &lt;title&gt;</code>就会使用对应的模板。</p><p>其中 <code>_layout.swig</code> 是通用模板，里面引入了<code>head</code>、<code>footer</code>等公共组件，然后在其他的模板中会引入这个 <code>_layout.swig</code>通用模板，比如 <code>post.swig</code> 模板</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> {% extends '_layout.swig' %}</span><br><span class="line">{% import '_macro/post.swig' as post_template %}</span><br><span class="line">{% import '_macro/sidebar.swig' as sidebar_template %}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">{% block title %} {{ page.title }} | {{ config.title }} {% endblock %}</span><br><span class="line"></span><br><span class="line">{% block page_class %}page-post-detail{% endblock %}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">{% block content %}</span><br><span class="line"></span><br><span class="line">  &lt;div id="posts" class="posts-expand"&gt;</span><br><span class="line">    {{ post_template.render(page) }}</span><br><span class="line"></span><br><span class="line">    &lt;div class="post-spread"&gt;</span><br><span class="line">      {% if theme.jiathis %}</span><br><span class="line">        {% include '_partials/share/jiathis.swig' %}</span><br><span class="line">      {% elseif theme.baidushare %}</span><br><span class="line">        {% include '_partials/share/baidushare.swig' %}</span><br><span class="line">      {% elseif theme.add_this_id %}</span><br><span class="line">        {% include '_partials/share/add-this.swig' %}</span><br><span class="line">      {% elseif theme.duoshuo_shortname and theme.duoshuo_share %}</span><br><span class="line">        {% include '_partials/share/duoshuo_share.swig' %}</span><br><span class="line">      {% endif %}</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">{% endblock %}</span><br><span class="line"></span><br><span class="line">{% block sidebar %}</span><br><span class="line">  {{ sidebar_template.render(true) }}</span><br><span class="line">{% endblock %}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">{% block script_extra %}</span><br><span class="line">  {% include '_scripts/pages/post-details.swig' %}</span><br><span class="line">{% endblock %}</span><br></pre></td></tr></tbody></table></figure><p>其中在第 11 行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% block content %} </span><br><span class="line">    // 中间为该模板自定义内容</span><br><span class="line">{% endblock %}</span><br></pre></td></tr></tbody></table></figure><h2 id="数据的填充">数据的填充</h2><p>数据的填充主要是 <code>hexo -g</code> 的时候将数据传递给 swig模板，然后再由 swig 模板填充到 HTML 中。</p><h3 id="配置文件中的数据">配置文件中的数据</h3><p>Hexo 的配置文件 <code>_config.yml</code> 使用 <a href="https://link.juejin.cn?target=http%3A%2F%2Fdocs.ansible.com%2Fansible%2Flatest%2FYAMLSyntax.html">yml语法</a>。例如博客的名字、副标题等等之类。这些数据项组织在 config对象中。可以数字、字符串、对象、数组，</p><h3 id="配置文件中数据的使用">配置文件中数据的使用</h3><p>如果要在模板中使用某个具体的值，比如字符串、数字、逻辑变量或者对象的某个成员，可以在主题的模板文件swig 中直接使用：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% block title %} {{ page.title }} | {{ config.title }} {% endblock %}</span><br></pre></td></tr></tbody></table></figure><h3 id="hexo-中的变量">Hexo 中的变量</h3><p>Hexo 提供了很多的变量，比如我们上面使用的 <code>page</code>变量，还有 <code>site</code> 变量等，这些都是 Hexo提供的，我们可以拿来直接使用的，常用的变量有：</p><ul><li><pre><code>  site  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">：对应整个网站的变量，一般会用到 </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>  site.posts.length</code></pre><p>制作分页器。</p><ul><li><code>site.posts</code> 所有文章</li><li><code>site.pages</code> 所有分页</li><li><code>site.categories</code> 所有分类</li><li><code>site.tags</code> 所有标签</li></ul></li><li><p><code>page</code>：存放当前页面的信息，例如我在<code>index.ejs</code> 中使用 <code>page.posts</code>获取了当前页面的所有文章而不是使用 <code>site.posts</code>。</p></li><li><p><code>config</code>：<code>config</code>变量我们在主目录下配置文件 <code>_config.yml</code>中保存的信息。</p></li><li><p><code>theme</code>：<code>theme</code>变量是我们在主题目录下配置文件 <code>_config.yml</code>中保存的信息。</p></li><li><p><code>path</code>：当前页面的路径（不含根路径）。</p></li><li><p><code>url</code>：页面完整网址。</p></li></ul><h4 id="页面变量">页面变量</h4><p>Page(page) 这里指的是 <code>hexo new page</code> 创建的那个页面</p><ul><li><code>page.title</code>：文章标题</li><li><code>page.date</code>：文章建立日期</li><li><code>page.updated</code>：文章更新日期</li><li><code>page.comments</code>：留言是否开启</li><li><code>page.layout</code>：布局名称</li><li><code>page.content</code>：文章完整内容</li><li><code>page.excerpt</code>：文章摘要</li><li><code>page.more</code>：除了摘要的其他内容</li><li><code>page.source</code>：文章原始路劲</li><li><code>page.full_source</code>：文章完整原始路径</li><li><code>page.path</code>：文章网址（不含根路径），通常在主题中使用url_for(page.path)</li><li><code>page.permalink</code>：文章永久网址</li><li><code>page.prev</code>：上一篇文章，如果此为第一篇文章则为null</li><li><code>page.next</code>：下一篇文章，如果此为最后一篇文章则为null</li><li><code>page.raw</code>：文章原始内容</li><li><code>page.photos</code>：文章的照片（用于相册）</li><li><code>page.link</code>：文章的外链（用于链接文章）</li></ul><h4 id="postpost-变量">Post(post) 变量</h4><p>这里指的是文章页面，与page布局相同，添加如下变量：</p><ul><li><code>page.pulished</code>：文章非草稿为true</li><li><code>page.categories</code>：文章分类</li><li><code>page.tags</code>：文章标签</li></ul><h4 id="首页index">首页(index)</h4><ul><li><code>page.per_page</code>：每一页显示的文章数</li><li><code>page.total</code>：文章数量</li><li><code>page.current</code>：当前页码</li><li><code>page.current_url</code>：当前页的URL</li><li><code>page.posts</code>：当前页的文章</li><li><code>page.prev</code>：前一页页码，如果为第一页，该值为0</li><li><code>page.prev_link</code>：前一页URL，如果为第一页，则为''</li><li><code>page.next</code>：后一页页码，如果为最后一页，则为0</li><li><code>page.next_link</code>：后一页URL，如果为最后一页，则为''</li><li><code>page.path</code>：当前页网址（不含根路径），通常在主题中使用url_for(page.path)</li></ul><h4 id="归档页archive">归档页(archive)</h4><p>与index布局相同，但是新增如下变量：</p><ul><li><code>archive</code> 为true</li><li><code>year</code> 归档年份（4位）</li><li><code>month</code> 归档月份（不包含0）</li></ul><h2 id="总结">总结</h2><p>非要说 Hexo 是什么的话，我觉得就是生成静态页面的工具，可以将我们使用markdown 编写的内容与主题模板相结合，生成 HTML 静态文件。并且可以和github 的 pages 或者其他可以将静态页面展现出来的服务（例如 coding 的pages 服务）相结合，一键部署。</p><p>再深入一点讲 Hexo 的原理的话，那就应该是使用 <a href="https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F07%2Fyaml.html%3Ff%3Dtt">yaml语言</a> 做配置文件，使用 <a href="https://link.juejin.cn?target=http%3A%2F%2Fwww.360doc.com%2Fcontent%2F16%2F0115%2F10%2F597197_528136785.shtml">ejs</a>或者 <a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Fcn%2Faix%2Flibrary%2Fau-swig%2F">swig</a>作为主题模板，与使用 markdown 书写的内容结合，生成静态 HTML 文件。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo源码设计模式</title>
      <link href="/posts/eab89b12/"/>
      <url>/posts/eab89b12/</url>
      
        <content type="html"><![CDATA[<p>hexo是一个快速、简洁且高效的博客框架，实际上不仅仅如此，他是一个js语言的编写的静态网站生成器，主要作用是解析markdown语法，配合模版引擎，快速生成静态网站。同时可以自定义主题，引用第三方插件，除了搭建个人博客外，Hexo还被许许多多的项目拿来生成API文档。</p><h2 id="框架特色">框架特色</h2><p>Node.js运行环境，速度极快，扩展能力强，强大的插件系统，可配置性高，一件编译部署，适用于博客，静态个人网站，开源项目文档，最受欢迎的JS静态网站生成器。</p><blockquote><p>Tip: 本文所有代码均为伪代码</p></blockquote><h2 id="hexo命令行设计">Hexo命令行设计</h2><p>在命令行模块，Hexo选择使用miniist来解析命令行参数得到一个js对象，并建立一个Hexo实例对象call方法传递命令行指令。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args = <span class="title function_">minimist</span>(process.<span class="property">argv</span>.<span class="title function_">slice</span>(<span class="number">2</span>))</span><br><span class="line"><span class="keyword">var</span> cmd = args.<span class="property">_</span>.<span class="title function_">shift</span>()</span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> <span class="title class_">Hexo</span>()</span><br><span class="line">hexo.<span class="title function_">init</span>()</span><br><span class="line">hexo.<span class="title function_">call</span>(cmd, args)</span><br></pre></td></tr></tbody></table></figure><h2 id="hexo入口模块设计">Hexo入口模块设计</h2><p>同大多数框架相同，Hexo采用构造-原型组合模式定义类，采用组合继承的方式继承Node中EventEmitter模块，更容易通过<code>on</code>与<code>emit</code>发布和订阅事件。在实例化阶段，保存所编译文件存放路径、输出路径及其他脚步、插件、主题等所处路径，保存环境变量，即命令行参数、版本号等基本信息。创建扩展对象，按不同的功能进行分类，作用是创建store，用于注册句柄，获取句柄，以便后续编译过程调用，在Hexo中，扩展类型包括控制台（Console）、部署器（Deployer）、过滤器（Fitter）、生成器（Generator）、辅助函数（Helper）、处理器（Processer）、渲染引擎（Renderer）等等。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args = <span class="title function_">minimist</span>(process.<span class="property">argv</span>.<span class="title function_">slice</span>(<span class="number">2</span>))</span><br><span class="line"><span class="keyword">var</span> cmd = args.<span class="property">_</span>.<span class="title function_">shift</span>()</span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> <span class="title class_">Hexo</span>()</span><br><span class="line">hexo.<span class="title function_">init</span>()</span><br><span class="line">hexo.<span class="title function_">call</span>(cmd, args)</span><br></pre></td></tr></tbody></table></figure><h2 id="hexo编译模块设计">Hexo编译模块设计</h2><p>预期用户命令行接口</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>首先前往Hexo扩展对象Console中注册<code>generate</code>函数</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">register</span>(<span class="string">'generate'</span>, <span class="string">'Generate static files.'</span>, {</span><br><span class="line">  <span class="attr">options</span>: [</span><br><span class="line">    {<span class="attr">name</span>: <span class="string">'-d, --deploy'</span>, <span class="attr">desc</span>: <span class="string">'Deploy after generated'</span>},</span><br><span class="line">    {<span class="attr">name</span>: <span class="string">'-f, --force'</span>, <span class="attr">desc</span>: <span class="string">'Force regenerate'</span>},</span><br><span class="line">    {<span class="attr">name</span>: <span class="string">'-w, --watch'</span>, <span class="attr">desc</span>: <span class="string">'Watch file changes'</span>}</span><br><span class="line">  ]</span><br><span class="line">}, <span class="built_in">require</span>(<span class="string">'./generate'</span>));</span><br></pre></td></tr></tbody></table></figure><p><code>generate</code>函数用于生成目标文件夹，从Hexo的路由模块中取得所有需要生成目标文件的路径，调用<code>fs</code>输出文件，在此之前，首先对源文件进行预处理，把路径写入路由。由于Hexo本身设计的特点，源文件又分为内容和主题两部分，分别存放在source和theme文件夹，所以得调用<code>process</code>函数分别对它们进行预处理</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">generate</span>(<span class="params">hexo</span>) {</span><br><span class="line">  hexo.<span class="property">source</span>.<span class="title function_">process</span>();</span><br><span class="line">  hexo.<span class="property">theme</span>.<span class="title function_">process</span>();</span><br><span class="line">  routerList.<span class="title function_">forEach</span>(<span class="function"><span class="params">path</span> =&gt;</span> <span class="title function_">writeFile</span>(path))</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Hexo抽象出一层公用模块用来管理所有处理器，命名为Box，相当于一个容器，统一管理处理器的添加删除执行，监控，并分别为source和theme创建实例，Box原型如下：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Box</span>(<span class="params">base</span>) {</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">base</span> = base;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">processors</span> = [];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="title class_">Box</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addProcessor</span> = <span class="keyword">function</span>(<span class="params">pattern, fn</span>) {</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">processors</span>.<span class="title function_">push</span>({</span><br><span class="line">    <span class="attr">pattern</span>: pattern,</span><br><span class="line">    <span class="attr">process</span>: fn</span><br><span class="line">  });</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="title class_">Box</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">process</span> = <span class="keyword">function</span>(<span class="params">callback</span>) {</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">processors</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">processor</span> =&gt;</span> processor.<span class="title function_">process</span>())</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>有了Box容器，接下来要做的就是往容器中添加处理器，同样，用插件的形式往扩展对象extend中注册句柄，在注入到Box容器中。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">hexo</span>) {</span><br><span class="line">  <span class="keyword">var</span> processor = hexo.<span class="property">extend</span>.<span class="property">processor</span>;</span><br><span class="line">  <span class="keyword">var</span> obj = <span class="built_in">require</span>(<span class="string">'./asset'</span>)(hexo);</span><br><span class="line">  processor.<span class="title function_">register</span>(obj.<span class="property">pattern</span>, obj.<span class="property">process</span>); <span class="comment">// pattern为文件名匹配格式</span></span><br><span class="line">  ...</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>以markdown文件处理为例，成功匹配到文件扩展名后，调用hexo-front-matter利用正则表达式匹配来解析文件，分离顶部元数据与主题内容，类似于<a href="https://github.com/jonschlinkert/gray-matter">gray-matter</a>，把元数据与内容以key/value的形式转化为一个js对象。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理器</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">hexo</span>) {</span><br><span class="line">  <span class="keyword">return</span> {</span><br><span class="line">    <span class="attr">pattern</span>: <span class="regexp">/\.md/</span>,</span><br><span class="line">    <span class="attr">process</span>: <span class="keyword">function</span>(<span class="params">path</span>) {</span><br><span class="line">      <span class="title function_">readFile</span>(path, <span class="keyword">function</span>(<span class="params">err, content</span>) {</span><br><span class="line">        <span class="keyword">var</span> data = <span class="built_in">require</span>(<span class="string">'hexo-front-matter'</span>)(content)</span><br><span class="line">        data.<span class="property">source</span> = path;</span><br><span class="line">        data.<span class="property">raw</span> = content;</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line">      }</span><br><span class="line">    }  </span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">// markdown文件</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">title: hello</span><br><span class="line"><span class="section">layout: home</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"><span class="section"># Hexo</span></span><br><span class="line">A fast, simple &amp; powerful blog framework</span><br></pre></td></tr></tbody></table></figure><p>解析成 =&gt;</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">title</span>: <span class="string">'hello'</span>,</span><br><span class="line">  <span class="attr">layout</span>: <span class="string">'home'</span>,</span><br><span class="line">  <span class="attr">_content</span>: <span class="string">'# Hexo\nA fast, simple &amp; powerful blog framework'</span>,</span><br><span class="line">  <span class="attr">source</span>: <span class="string">'README.md'</span>,</span><br><span class="line">  <span class="attr">raw</span>: <span class="string">'---\ntitle: hello\n---\n# Hexo\nA fast, simple &amp; powerful blog framework'</span> </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下一步，Hexo定义了过滤器(Fitter)的概念，借鉴于WordPress，用于在模版渲染前后修改具体的数据，也可以把它看成一个钩子，例如使用<a href="https://github.com/markedjs/marked">marked</a>编译markdown文件内容。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="title function_">execFilter</span>(<span class="string">'before_generate'</span>, <span class="keyword">function</span>(<span class="params">data</span>) {</span><br><span class="line">    hexo.<span class="property">render</span>.<span class="title function_">render</span>({</span><br><span class="line">      <span class="attr">text</span>: data.<span class="property">_content</span>,</span><br><span class="line">      <span class="attr">path</span>: data.<span class="property">source</span>,</span><br><span class="line">      <span class="attr">engine</span>: data.<span class="property">engine</span></span><br><span class="line">    });</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>转化后增加一条content属性，带有标签与类名的markdown html片段</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">  title<span class="punctuation">:</span> 'hello'<span class="punctuation">,</span></span><br><span class="line">  layout<span class="punctuation">:</span> 'home'<span class="punctuation">,</span></span><br><span class="line">  _content<span class="punctuation">:</span> '# Hexo\nA fast<span class="punctuation">,</span> simple &amp; powerful blog framework'<span class="punctuation">,</span></span><br><span class="line">  content<span class="punctuation">:</span> '&lt;h1 id=<span class="string">"Hexo"</span>&gt;&lt;a href=<span class="string">"#Hexo"</span> class=<span class="string">"headerlink"</span>     title=<span class="string">"Hexo"</span>&gt;&lt;/a&gt;Hexo&lt;/h1&gt;&lt;p&gt;A fast<span class="punctuation">,</span> simple &amp; powerful blog   framework&lt;/p&gt;\n'<span class="punctuation">,</span></span><br><span class="line">  source<span class="punctuation">:</span> 'README.md'<span class="punctuation">,</span></span><br><span class="line">  raw<span class="punctuation">:</span> '---\ntitle<span class="punctuation">:</span> hello\n---\n# Hexo\nA fast<span class="punctuation">,</span> simple &amp; powerful blog framework' </span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><p>得倒页面数据后，进入模版引擎渲染阶段，Hexo本身不带模版引擎实现，需要借助第三方库，例如ejs，并通过一个适配器，把原接口转换为需求接口，向扩展对象extend.render中注册模版解析函数。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">renderer</span>.<span class="title function_">register</span>(<span class="string">'ejs'</span>, <span class="string">'html'</span>, <span class="keyword">function</span>(<span class="params">data, locals</span>) {</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'ejs'</span>).<span class="title function_">render</span>(data, locals))</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>模版引擎解析所有函数存储在hexo.theme对象中，以文件名作为key，后续渲染只需匹配layout就能找到指定的渲染函数，注入locals变量（上面markdown解析后的js对象+扩展对象extend.helper定义的变量、函数），生成最终文本字符串。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> view = hexo.<span class="property">theme</span>.<span class="title function_">getView</span>(data.<span class="property">layout</span>);</span><br><span class="line">view.<span class="title function_">render</span>(locals)</span><br></pre></td></tr></tbody></table></figure><p>最后通过Node<code>fs</code>模块把最终文本字符串输出到public目标文件夹中，大功告成。</p><p>回顾整个工作流程，可以看作</p><p>cli =&gt; hexo init =&gt; plugin load =&gt; process =&gt; filter=&gt; render =&gt; generate</p><h2 id="扩展阅读">扩展阅读</h2><p>Hexo有许多优秀设计模式</p><h3 id="数据库系统">数据库系统</h3><p>Hexo引入了json数据库<a href="https://github.com/hexojs/warehouse">warehouse</a>，也是作者自己开发的一个数据库驱动，API用法与Mongoose相差无几，在架构中的角色是充当一个中介者，存储临时数据，或者持久化数据存储，如博客的发表时间，还可以做完缓存层，比对文件的修改时间，跳过无修改文件的编译过程，减少二次编译的时间。</p><h3 id="异步方案">异步方案</h3><p>大量异步回调文件操作会让代码丧失可读性，Hexo引入Promise库<a href="https://github.com/petkaantonov/bluebird">blurebird</a>，内置丰富API，很方便的处理异步的流程控制，如使用<code>Promise.promisify(require('fs'),readFile)</code>可以把原生<code>fs</code>异步函数包装成一个Promise对象，另外，随着Node7.6正式版发布，直接支持async/await语法，可以更优雅得处理异步问题。</p><h3 id="通用日志模块">通用日志模块</h3><p>把Log划分为六个级别，'trace','debug','info','warn','error','fatal'，不同级别输出不同故事与颜色<a href="https://github.com/chalk/chalk">chalk</a>，并提供命令行接口，如果带有-debug字段，则Log自动降级为‘trace’级别</p><p>参考：<a href="https://juejin.cn/post/6844903469669679117" class="uri">https://juejin.cn/post/6844903469669679117</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客框架简介</title>
      <link href="/posts/539ce4a8/"/>
      <url>/posts/539ce4a8/</url>
      
        <content type="html"><![CDATA[<p>博客是以网络为载体，简易迅速便捷地发布自己的心得，及时有效地与他人进行交流，丰富多彩的个性化展示的综合性平台。</p><h2 id="博客搭建方式">博客搭建方式</h2><p>博客搭建方式可分为静态博客和动态博客。</p><p>静态博客：博文内容通过文档（如<code>.md</code>文件等）记录，通过工具编译成最终的html，css，js等动态文件，然后部署在静态server服务器或web托管至数据仓库（如：github），即可在互联网中被访问，不需要数据库支撑。</p><p>动态博客：以数据库技术为基础，博文内容通过数据库记录存储，主要特点体现在交互性；动不是指网页中页面元素或特效在动，而是与后台数据库进行交互和数据传递（如：注册登陆，评论，用户管理）</p><p>常见的博客框架</p><ul><li>静态框架<ul><li><a href="https://hexo.io/zh-cn/">Hexo</a></li><li><a href="https://www.gohugo.cn/">Hugo</a></li><li><a href="https://www.vuepress.cn/">VuePress</a></li><li><a href="https://www.jekyll.com.cn/">jekyll</a></li></ul></li><li>动态框架<ul><li><a href="https://wordpress.org/">WordPress</a></li><li><a href="https://typecho.org/">Typecho</a></li><li><a href="https://www.halo.run/">Halo</a></li><li><a href="https://www.halo.run/">Salo</a></li></ul></li></ul><h2 id="框架简介">框架简介</h2><h3 id="hexo">Hexo</h3><p>Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="hugo">Hugo</h3><p>Hugo 是一个快速且现代的静态网站生成器，采用 Go 编程语言开发，Hugo的设计目标是让创建网站重新变得有趣。</p><p>Hugo 是一个通用的网站框架。从技术上讲，Hugo 是一个<a href="https://www.gohugo.cn/about/benefits/">静态站点生成器</a>。与动态构建页面的系统不同，Hugo在创建或更新内容时构建页面。由于网站的浏览频率远高于编辑频率，因此 Hugo旨在为您的网站最终用户提供最佳的浏览体验，并为网站作者提供理想的写作体验。</p><p>使用 Hugo 构建的网站非常快速和安全。Hugo构建的网站可以托管在任何地方，包括 <a href="https://netlify.com/">Netlify</a>、<a href="https://www.heroku.com/">Heroku</a>、<a href="https://www.godaddy.com/">GoDaddy</a>、<a href="https://www.dreamhost.com/">DreamHost</a>、<a href="https://pages.github.com/">GitHub Pages</a>、<a href="https://about.gitlab.com/features/pages/">GitLab Pages</a>、<a href="https://surge.sh/">Surge</a>、<a href="https://www.aerobatic.com/">Aerobatic</a>、<a href="https://firebase.google.com/docs/hosting/">Firebase</a>、<a href="https://cloud.google.com/storage/">Google Cloud Storage</a>、<a href="https://aws.amazon.com/s3/">Amazon S3</a>、<a href="https://www.rackspace.com/cloud/files">Rackspace</a>、<a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-static-website">Azure</a>,和 <a href="https://aws.amazon.com/cloudfront/">CloudFront</a>，并且与CDN 更配。Hugo 网站在运行时不需要数据库或依赖于诸如 Ruby、Python 或 PHP等昂贵的运行时环境。</p><p>Hugo是一个理想的网站创建工具，具有几乎即时的构建时间，能够在网站修改时即刻重建。</p><h3 id="vuepress">VuePress</h3><p>VuePress 由两部分组成：第一部分是一个<a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/core">极简静态网站生成器(opens new window)</a>，它包含由 Vue 驱动的<a href="https://www.vuepress.cn/theme/">主题系统</a>和<a href="https://www.vuepress.cn/plugin/">插件API</a>，另一个部分是为书写技术文档而优化的<a href="https://www.vuepress.cn/theme/default-theme-config.html">默认主题</a>，它的诞生初衷是为了支持Vue 及其子项目的文档需求。</p><p>每一个由 VuePress 生成的页面都带有预渲染好的HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><p>事实上，一个 VuePress 网站是一个由 <a href="http://vuejs.org/">Vue(opens new window)</a>、<a href="https://github.com/vuejs/vue-router">Vue Router (opens newwindow)</a>和 <a href="http://webpack.js.org/">webpack (opens newwindow)</a>驱动的单页应用。如果你以前使用过 Vue的话，当你在开发一个自定义主题的时候，你会感受到非常熟悉的开发体验，你甚至可以使用Vue DevTools 去调试你的自定义主题。</p><p>在构建时，我们会为应用创建一个服务端渲染（SSR）的版本，然后通过虚拟访问每一条路径来渲染对应的HTML。这种做法的灵感来源于<a href="https://nuxtjs.org/">Nuxt (opens new window)</a>的<code>nuxt generate</code> 命令，以及其他的一些项目，比如 <a href="https://www.gatsbyjs.org/">Gatsby (opens new window)</a>。</p><h3 id="jekyll">Jekyll</h3><p>Jekyll 是一个静态网站生成器。用你喜欢的 标记语言书写内容并交给 Jekyll处理，它将利用模板为你创建一个静态网站。你可以调整你想要的网址样式、在网站上显示哪些数据 等等。</p><h3 id="wordpress">WordPress</h3><p>WordPress 于 2003年发布，时至今日仍是非常受欢迎的开源内容管理平台，用于创建网站、博客网站甚至应用。事实上，大约 30% 的网页是使用 WordPress 创建的。</p><p>WordPress 为内容创建者和 IT 管理员提供了几大优势。 例如，WordPress提供了高度的灵活性，无需进行大量的设计或开发工作。 使用和管理也很简单。重要的是，WordPress支持多种部署方案，因此您可以根据自己的架构偏好将此平台集成到自己的环境中。</p><h3 id="typecho">Typecho</h3><p><strong>Typecho</strong>是一个基于<a href="https://zh.wikipedia.org/wiki/PHP">PHP</a>的开源博客程序。它使用多种数据库（<a href="https://zh.wikipedia.org/wiki/MySQL">MySQL</a>、<a href="https://zh.wikipedia.org/wiki/PostgreSQL">PostgreSQL</a>、<a href="https://zh.wikipedia.org/wiki/SQLite">SQLite</a>、<a href="https://zh.wikipedia.org/wiki/MariaDB">MariaDB</a>）储存数据，在<a href="https://zh.wikipedia.org/wiki/GNU通用公共许可协议">GPLv2</a>许可证下发行。</p><h3 id="halo">Halo</h3><p>Halo基于Java语言，使用<a href="">springboot</a>框架开发的博客系统，致力于打造最好的java博客系统，且只想安安静静等做一个博客系统。</p><h3 id="solo">Solo</h3><p>solo基于Java有后台的，小而美的博客系统，专为程序员设计。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo忽略一些无需编译的文件</title>
      <link href="/posts/a680fc83/"/>
      <url>/posts/a680fc83/</url>
      
        <content type="html"><![CDATA[<p>Hexo中如果需要自定义自己喜欢的主题或者页面，hexo默认编译source目录下的所有文件。</p><p>下面主要分享一个实用的技术点：自定义无需编译的文件</p><h2 id="方法">方法</h2><p>修改<code>_config.yml</code>中的一个配置项<code>skip_render</code></p><blockquote><p>Skip_render：跳过指定文件的渲染，可用glob表达式匹配路径</p></blockquote><h2 id="配置">配置</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跳过单个文件</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过所有的html的文件</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">'*.html'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过某一目录下的所有文件:</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要跳过某一目录下的所有文件和子目录时：</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test/**</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过多个目录，或者多个文件：</span></span><br><span class="line"><span class="attr">skip_render:</span> [<span class="string">'*.html'</span>, <span class="string">demo/**</span>, <span class="string">test/*</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以配置成多行</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test1/*.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test2/**</span></span><br></pre></td></tr></tbody></table></figure><h2 id="错误">错误</h2><ol type="1"><li>设置<code>skip_render</code>不起作用，执行<code>hexo clean</code>清楚缓存。</li><li>跳过多个目录编译失败，尝试更新<code>hexo</code>，在source同级目录中执行<code>npm update hexo</code></li><li>如果需要查看是否成功跳过编译，可以在编译时加上<code>--debug</code>例如：<code>hexo generate --debug</code>，关注输出<code>Rendering xxxx</code>中的东西。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>往前走</title>
      <link href="/posts/cdaca030/"/>
      <url>/posts/cdaca030/</url>
      
        <content type="html"><![CDATA[<h2 id="序">序</h2><p>​ ”往前走，别回头“</p><p>​ “前方通往何处，我可不可以不走”</p><p>​ “你只能往前走，你不是只有一条路走”</p><h2 id="正文">正文</h2><p>​醒了，我好像醒了，又好像还在梦里。如果是在梦里，似乎是个噩梦，如果是现实倒是安心了，坐起湿了背，想是冷汗浸透了衣裳。既然清醒了，无论是不是梦中，该是时候出门了。</p><p>​我想是还在梦中，我家住七楼，怎么开门就到了楼下。看天气，不像早上，倒像是夜里，灰蒙蒙，雾一片，行人三两个，倒开心放肆了。我自言自语道：”呵，好家伙，我这是梦到何处了？妈的！好赖不做梦，一做梦倒不是什么好梦，真他妈的可恶！好歹做个春梦呀，让我在梦里也过过女朋友的瘾，再不济也做富贵梦、皇帝梦不是。“</p><p>​ --罢了，既然知道是梦，梦里我最大，好好快活一下吧--</p><p>​前面似乎有个早餐店，梦里也吃点东西好了。我快步向前，只见一无字牌立于店前，无甚么名字，倒是有稀疏客人埋头在桌面上，一个小摊灶台，七八个小锅，呼呼冒着白气，倒也稀奇，不知是梦不真实还是睡着了着凉了，这白气看起来怪冷的。‘“啊婆！有什么吃的啊，来碗桂粉，加份牛腩。”，”嘻嘻嘻“那纤瘦啊婆发出一阵像是小孩嬉笑的声音说道：“靓仔，我这没有什么粉面，专门做汤，这好几个锅，装的也是各种汤，不知道客人要喝哪种汤？”</p><p>​--汤？喝什么汤？我向来不喝汤，算了，向来也常不吃早餐，没想到梦里也吃不成--</p><p>​ 我摇摇手道：“那算了，啊婆，没有那便不吃了。”</p><p>​“你确定不喝吗？来这的从来没有人不喝我做的汤，小哥，我的汤可是包真材实料的，过了这村可就没这店了，到时候想喝也没得喝了！”她情绪有点激动地回答道。</p><p>​我心道：在我梦里想喝还有喝不上的？不过也是，梦也不受控制，确实可能过了这就喝不上了，不过梦里我最大，不喝又能怎么滴，我还就叛逆上了还，再说了什么汤还能有啥料，真他妈的稀奇，怪的很，还是不喝为妙。在我思考的时候，那个啊婆已经把汤递到了我的嘴跟前，说道：“试试吧，不好喝，不收钱。”</p><p>​危急关头，我一把排开了那碗汤，快步的向前跑了。边跑边心惊道：“晦气，我测，还好我机灵，啥玩意啊，指定里面放了什么蒙汉药，刚刚那几个食客那么奇怪，肯定是被她蒙翻了，好家伙，梦穿到水浒传了？上来就要蒙翻我这个好汉么？还好我反应快，脑子机灵，不爱喝汤！”</p><p>​--真奇怪，一路走来也没什么人，这条路前面啥都没有吗？两边也是阴森的树木，给人一种进入了森林就会有不好的事情发生的感觉，我怎么做了个这么无聊的梦--</p><p>​走着走着，终于前方出现了一个人影。“不会又是什么不好的人吧，罢了，即是梦中，倒会他一会。”，“嘿，前面的人，请停一下，请停一下...”在我一声声的呼唤下，那个人转过身停了下来，我走前细看，原来是一个女生，年纪不是很大，十七八岁的样子，身材不是很好，样貌不是很出众，但是很端正。</p><p>​ “你好，请问有什么事吗？”在我错愕的时候，她问到。</p><p>​“不，没什么事，只是在这条路上有些许孤单，路上也没什么人，所以叫住了你，想和你一块走走，路上也能做个伴，不知道你介不介意呢？”</p><p>​“可以是可以，只是我本来不是一个人，只是现在...”，她低着头说道。“我想我还是一个人走的好，你陪不了我到头的。”，忽然间她抬头微笑着对我说道。</p><p>​--我这是被拒绝了吗？梦里也被拒绝了，妈的，这个梦也太真实了吧，不行，梦里我最大，好歹也得赖上她吧，我都不挑了，咋还能被梦中人挑上了--</p><p>​“姑娘你多虑了，不管你去哪，我保证都陪你走到头好吧，我是寂寞的很，闲得慌，有的是时间，你去哪我送你去好吧。”，我拉着她的手，言辞恳切道。</p><p>​梦里的我有的是洒脱劲，我撒了个谎了，这个梦我哪能保证什么时候醒，我倒想看看会发生些什么，她想去哪里咧！前提是这个梦能做完，我做过太多有头没尾的梦了...</p><p>​ 她似乎被我冒昧的行为吓到了，怔住了，突然间她回过神来</p><p>​ “好吧，那你和我拉钩立誓吧！我陪你走。”她红着脸说道。</p><p>​“咋还拉钩呢，那不是小孩子把戏，罢了罢了，依了你了”，看着她红着脸的可爱样，我一个老直男哪受的了啊。</p><p>​ “接下来我们去哪啊？那个你叫什么名字？我叫...，我似乎想不起来了”</p><p>​"我叫昨夜，很高兴能和你作伴！我也不知道前面是什么地方，不过我想我们要去的地方是一样的，我们就往前走吧！既然你没有名字，我叫昨夜，你就叫明月吧！"，她很是活泼，让我很不适应，我从来都是张冷面皮，笑起来很是别扭，不知道如何回应她。</p><p>​“嗯，挺好的，明月就明月吧。只是这名字取得也够直白的，那我们就先往前走走看看吧，看看前面有啥。”</p><p>​路途上很无聊，一路上都没什么人，阴阴森森的，好在有个人作伴，一路上走来，我发现这个女孩我还是有点喜欢的，她好像对我有一种莫名的好感，非常的活泼，一路上都在给我分享她的所见所闻，虽然大部分我都不太感兴趣，但是我的名字我倒是知道怎么来的了，原来不是为了和她的名字对应，而是她原来的同伴就叫“明月”啊，还挺心塞的，不过无所谓了。</p><p>​我不知道我这个社交废物，一副死鱼脸的家伙有什么值得她这么热心的，还是她天生是一个倾诉者，她对我热心过头久了，也有些心烦了，大部分时候都是三句真言“嗯“，”哦？“，”这样啊”应付了事。其实我倒也想和她分享些什么，但是我一路走来，好像都是一个人，对于我来说好像没什么很特别的事情，实在不是一个能讲故事的人啊！悲催呀悲催！</p><p>​也不知过了多久，也许是一会，只是在梦中好像过了很久，她突然大声的说道：“明月，你看，前面好漂亮啊，美丽的鲜花和绿地！”</p><p>​“鲜花？哪来的绿地？前面不还是冷冰冰、阴森森、一排排、好似死了又没死的树木吗？”</p><p>​“怎么会呢？前面不是美丽的鲜花吗？你看！一排排的玫瑰花，郁金香，还有水仙，还有蜜蜂在采蜜呢！”，她异常兴奋地向我描述着。可是无论我怎么看，我都看不到，这究竟是为什么呢？我心想：“莫非她魔怔了，还是我魔怔了？我去，不会我梦到一个疯女孩了吧，想是发病了？”</p><p>​“怎么了？你看不见吗？你一点也看不到？”，她突然呆住了，双眼突然垂下两束泪来，接着道：”果然你也一样，你也看不到...“</p><p>​ “你有经历过这样的事情？莫非就是你之前的同伴？”</p><p>​“我不想和你说话了...”，她突然变得很阴郁，好似换了个人，不再那么多话，突然间走得很快，我从来都没有见过她走这么快，明明之前路途上，都是我走在前面的，现在她却比我还快。</p><p>​ 我快步向前，想追上她，可是转眼间她已经不见踪影。</p><p>​“怎么突然走怎么快，之前路上楚楚可怜的和我说走不动，都是装出来的吗？真的是一个有心计的女人，之前等我现在又不等了，想干嘛呢？真是搞不懂...”，我自顾自的说道。</p><p>​后来我往前走了好久，没有见到什么鲜花，也没见到她，我也就没在追了。“罢了，既然她都走远，那就让她走快点吧。”</p><p>​”又回归到一个人咯，感觉世界突然亲近了，但是却有点不习惯了，之前路途上有她还怪热闹的“，我开始自言自语，“没有了人，我自己反倒是说的开了，真的是无语了...”。这个梦怎么还不醒，要是一直这么下去也太过无聊了，还是早点醒吧？</p><p>​也不知道是不是我的潜意识感受到的我呼唤，我突然间好像听到后头有人在呼喊，“昨夜，昨夜，停一停...”</p><p>“昨夜，昨夜在后面吗，还有另一个人？”，我转过头，奇怪的事情发生了，我发现我来时的路不在是阴森的两排树木，而是一片片的鲜花和绿地。</p><p>​ --这个梦还能更怪一点吗？--</p><p>​后面没有“昨夜”的影子，而是一个我没见过的女孩，她小跑着向我走来，我在原地等她走到跟前，并仔细端详着她，她身材很好，样貌很出众，看起来和我年纪差不多大，行为举止给人一种大家闺秀的感觉，可以说是我最喜欢的那种类型。我乐坏了，心想，“这个梦终于好起来了，芜湖！”，我先开口道：“你好，你怎么了？是需要帮忙吗？我是昨夜的朋友，我也正在找她呢！”，她答到：“不好意思，先生，打搅到您了，我确实在寻找“昨夜”，我刚刚在后面还以为您是他呢？您是昨夜的朋友吗？我突然间找不到他了。如果不冒昧的话，我能跟您一块去寻找他吗？”</p><p>​就这样，我又和一个女生结了伴，一起在向寻找“昨夜”的路上。路途虽有欢喜的女孩相伴，但是我却不甚开心，甚至有些尴尬，因为我的社恐加上女孩的腼腆，我们在路上几乎没有什么话题讲，我也不知道怎么开口，我本想找机会和这个女孩打开话匣子，聊聊我们的共同话题“昨夜”，但是最后尴尬的发现，我们说的“昨夜”原来根本不是一个人，甚至不是同一个性别，这让我的处境更加的窘迫了，“昨夜”本来是链接我们的纽带，现在反而成为了最不想提起的话题。</p><p>​突然间，我想，“既然我们聊不到“昨夜”，干脆问问她的情况好了，反正我对这个“昨夜”，还是那个“昨夜”的都不太感冒”</p><p>​“对了，你叫什么名字呀？走了那么久，还不知道你的名字呢，你也老是叫我先生先生的，我的名字叫明月，你能告诉我你的名字吗？”</p><p>​ 她突然很诧异，反问我道：“你也叫明月吗？”</p><p>​“也？你也叫明月？你是生来就叫明月吗？还是你也是别人给你取的？”，我有点不可思议，不过转念一想，既然是梦里，什么稀奇古怪的事也都合理了。</p><p>​“我好像是生来就叫这个名字的，从我记事起，别人都是这么喊我的，听先生说的好像您的名字是别人取的吗？”，她带着好奇的语气说到。</p><p>​我向她解释了名字的由来，这一说打开了她对我这另一个“明月”的好奇心，她对我的故事感兴趣了起来，我也开始滔滔不绝讲我的故事。在路途上我们不在尴尬，也开始有了话题，我变成了讲故事的人，她变成了听故事的人，就像我和“昨夜”那样，只是现在我成了“昨夜”，这个女孩成为了“明月”，虽然她本来就是明月。我的故事讲的也差不多之后，我开始询问她的故事，只可惜她好像是个没故事的人，不仅她没什么故事，就连之前和她一起的“昨夜”也没故事。但是不重要，她好像不需要之前的“昨夜“了。我好像成为了”昨夜“，在各种意义上，我不仅扮演了”昨夜“的角色，也继承了他们的名字。</p><p>​就这么走着走着，我忽然发现前方的路不一样了，我好像看到了，和一路上截然不同的风景，就像我之前看到的那样，我忽然有些难以言表的激动，我本能地向”明月“分享喜悦，我向她高兴地说道：”明月，你看，前面多漂亮啊，多美丽的鲜花和草地！“。只可惜我的喜悦没有传递给”明月“，她反而有些疑惑的说道：“哪有鲜花和草地呀？昨夜你是不是眼花了？”，我有些惊奇以至于有些发懵，随即失落和无力感急速的撞向我，我好像明白了什么，好残酷的梦...</p><p>​“明月”一脸担忧的看向我，抓着我的手忧心匆匆的说道：“昨夜，你没事吧，你是不是走累了，我们休息一下吧！”</p><p>​在她的呼喊中回过神来后，我挤出微笑和她说道：“哎呀，都不知道走多久了，看花眼了都，我们就在这休息一下吧，休息一下就好了，小问题。”</p><p>​不知道她是不是被我怪异的微笑吓到了，她突然间失落道，“你在骗我，昨夜，我们就要分开了，我知道的，就像之前那样，我和看到鲜花的“昨夜”分开了...我们也要分开了。“</p><p>​”不会的，明月，我没看到什么鲜花，我刚刚是眼花了，我们就地休息一会，不往前走了。“</p><p>​”没用的，就算我们不走，鲜花和绿地也会过来的，我是经历过的人了，你不要再骗我了...“</p><p>​"那我们就往回走！只要让鲜花和绿地追不上我们就好了！"，我边说边去抓“明月”的手，突然我发现我抓不住“明月”了，她的身影开始发虚，隐隐之间像是要消失了，我开始惊慌起来。</p><p>​“往前走吧！昨夜，往前走！”，“往前走到我们都能看到鲜花和绿地的地方，也许我们就不用分开了！”，“明月”消失了，在我的面前消失了。我突然间好想醒来，糟糕至极的梦，我不想动了，好累，我开始自暴自弃。</p><p>​我没能醒来，我只好往前走，也只能往前，我开始加快脚步，我期盼着早日见到“明月”，我想在“明月”能看到鲜花和绿地的地方等着她，我在路途中也遇到了其他的身影，我没时间和精力浪费在路途上，我的目标只有那块“明月”也能看到的鲜花绿地！即是我并不知道它在哪里？即是它不存在，那我也要走到这条路的尽头！</p><p>​直到...我再次遇到了一个熟悉的身影，那个赋予我名字的女孩“昨夜”，我不敢相信能够和她重逢，我高兴的像个孩子，即是遇到故人的喜悦，也坚定了的信心，我能够和“明月”重逢，我只要往前走。</p><p>​“昨夜...停下，我是明月，等等我”，我扯着嗓子喊道。奇怪的是，”昨夜”没有停下，反而好像在快步的向前，我见状使出了平生最大的速度向前狂奔，终于好说歹说的把她逮住了，我确信没认错人。</p><p>​“你跑什么呀，昨夜，我是明月呀，你不认得我了？当初你赌气向前跑这么快，我还以为再也找不到你了呢！”</p><p>我气喘吁吁的说道，“当初我不知道看到鲜花和绿地，就要分开，我现在看到鲜花和绿地了，所以我们重逢了，这是好事啊，说明只要我们都看到鲜花和绿地我们就能一块走了！”</p><p>​ “你认错人了，我不是什么昨夜，我不认识你。”她边走边说道。</p><p>​“我认错人了？不对，要是我认错人了，怎么你越喊你越跑呢？你是不是生气了，让你等我太久真的不好意思，我诚挚地向你道歉，你看我都追上你了，再说了我们还拉钩立誓了不是”</p><p>​ 她突然停住了，“拉钩立誓什么的，那是小孩子玩意，你还是忘记了吧！”</p><p>​“哎，好你个昨夜，你承认了是吧，你怎么不讲信用了呢？就算之前是我怠慢了你，你也不能既不认我，也不守信吧，我可得好好数落数落你。”</p><p>​ 正当我想好好数落“昨夜”的时候，前面传来了一声声“明月”的呼喊声</p><p>​ --喊我的？--</p><p>​“昨夜”开始加快脚步，我也随着加快脚步，终于我见到这个呼喊声的来源，一个健硕的男生，个头没我高，但比我壮，长着很普通的脸。他对于我和“昨夜”的同行似乎有些疑惑，随后他开声道：“明月，这位是？”，在我有些疑惑不知怎么回答他的时候。</p><p>​ “以前的朋友，碰巧遇到。”，“昨夜”抢声道。</p><p>​ “原来是你的朋友啊，我叫昨夜，很高兴认识你！不知道怎么称呼你？”</p><p>​“昨夜”的脸色有些抽搐，嘴上欲言又止的，看起来有些为难。我突然止不住地笑了起来，我怪异的行为让他们很是惊异，很快我又止住了笑声，回答道：“很高兴认识你，昨夜，我很想向你介绍我自己，可惜我本没有名字，就叫我无名吧。”</p><p>​ 一阵白光闪过，恍惚间我醒了。梦醒了，却未尽，明月不见，尽头没到。</p><hr><p>​ 一个梦，一个只能往前走的梦，一些人一些事，荒诞又真实。</p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 梦游记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 志异 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建立一个独立HTML页面</title>
      <link href="/posts/233e464c/"/>
      <url>/posts/233e464c/</url>
      
        <content type="html"><![CDATA[<h2 id="引言">引言</h2><p>Hexo作为一个轻量、强大的博客框架，当我们需要发布博文，只需将markdown文件放入<code>blogRoot/source/_posts</code>目录下，再执行<code>hexo g</code>命令时，<code>.md</code>文件便能转化为html文件，但是有时候我们并不想Hexo渲染我们的自己独立的样式，比如放入一些自己的作品和相册等...</p><h2 id="方法一">方法一</h2><p>使用Hexo提供的跳过渲染配置，在Hexo配置文件下<code>_config.yml</code>找到<code>skip_render</code>关键字，在后面添加跳过渲染的页面，比如我们创建的<code>/source/about/index.html</code>，配置文件填写<code>skip_render: about/**</code>，那么就表示<code>/source/about</code>所有文件将跳过渲染，里面的文件将会被直接复制到public文件夹中，此时可以得到一个独立的about页面</p><h2 id="方法二">方法二</h2><p>在文章头部的<code>front-matter</code>里添加配置<code>layout: false</code>来跳过渲染配置，比如我们要使用<code>about</code>页面跳过渲染，创建<code>/source/about/index.md</code>，将这个页面的相关<code>html</code>代码写入<code>.md</code>文件并保存，然后再<code>index.md</code>的头部添加如下设置：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="section">layout: false</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">{% raw %}</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">xx HTML代码 xx</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">{% endraw %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Front-matter是<code>.md</code>文件以---分割的区域，用于指定个别文件变量</p><p><code>.md</code>文件中的<code>html</code>代码要用<code>`和`</code>包起来，使其正确编译里面的代码</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章锚点</title>
      <link href="/posts/9c47cdff/"/>
      <url>/posts/9c47cdff/</url>
      
        <content type="html"><![CDATA[<h2 id="当前文章锚点跳转">当前文章锚点跳转</h2><blockquote><ol type="1"><li>使用markdown生成目录</li><li>使用html<code>&lt;span id="jump"&gt;跳转的地方&lt;/span&gt;span&gt;</code>，然后使用<code>[点击跳转](#jump)</code></li></ol></blockquote><h2 id="站内文章链接">站内文章链接</h2><p>官方有标签插件实现，如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post<span class="emphasis">_link官方文档{% post_</span>link 'hexo blog' %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Tip:优先使用文章<code>Front-matter</code>中的<code>permalink</code>，如果没有<code>permalink</code>，则使用<strong>文件名字</strong>！</p></blockquote><h2 id="站内其他文章锚点链接">站内其他文章锚点链接</h2><p>上面的<code>post_link</code>在链接站内其他文章时很好用，但是不支持站内其他文章的锚点链接。</p><p>官方文档还有一个<code>post_path</code>，用于获取文章路径，结合markdown内置链接方式，即可实现站内其他文章锚点链接</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post<span class="emphasis">_path官方文档[<span class="string">hexo 安装</span>](<span class="link">{% post_path 'hexo blog' %}#安装</span>)</span></span><br></pre></td></tr></tbody></table></figure><p>也可使用<code>html &lt;a&gt;</code>标签实现，如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="{% post_path 'hexo blog' %}#安装"&gt;hexo 安装&lt;/a&gt;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Tip:</p><ol type="1"><li>如果文章内有图片，可能出现锚点位置不准确的问题，原因是图片加载好把文字内容撑开</li><li>如果有空格，需要把空格换成连字符-。</li></ol></blockquote><h2 id="站外文章锚点超链接">站外文章锚点（超链接）</h2><p>直接使用全局路径即可，如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">hexo 引用文章</span>](<span class="link">https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Tip: 要设置anchors</p></blockquote><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">markdown:</span><br><span class="line">  anchors:</span><br><span class="line"><span class="code">    # Minimum level for ID creation. (Ex. h2 to h6)</span></span><br><span class="line"><span class="code">    level: 2</span></span><br><span class="line"><span class="code">    # A suffix that is prepended to the number given if the ID is repeated.</span></span><br><span class="line"><span class="code">    collisionSuffix: ''</span></span><br><span class="line"><span class="code">    # If `true`, creates an anchor tag with a permalink besides the heading.</span></span><br><span class="line"><span class="code">    permalink: true</span></span><br><span class="line"><span class="code">    # Class used for the permalink anchor tag.</span></span><br><span class="line"><span class="code">    permalinkClass: header-anchor</span></span><br><span class="line"><span class="code">    # Set to 'right' to add permalink after heading</span></span><br><span class="line"><span class="code">    permalinkSide: 'right'</span></span><br><span class="line"><span class="code">    # The symbol used to make the permalink</span></span><br><span class="line"><span class="code">    permalinkSymbol: ⁍</span></span><br><span class="line"><span class="code">    # Transform anchor to (1) lower case; (2) upper case</span></span><br><span class="line"><span class="code">    case: 1</span></span><br><span class="line"><span class="code">    # Replace space with a character</span></span><br><span class="line"><span class="code">    separator: '-'</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法补充</title>
      <link href="/posts/df4516cb/"/>
      <url>/posts/df4516cb/</url>
      
        <content type="html"><![CDATA[<p>在hexo中使用markdown是简单、容易的，markdown语法的简洁可以让我们得到一个干净简洁的版面，但简单</p><p>的同时也意味着某些功能的缺失，比如插入音频和视频，实现文字居中等，好在Hexo框架中等博客是将markdown文件先渲染为html文件，所以在markdown文件中写入html语法也能被Hexo正常显示渲染，以下为个人在写博客中有用到的一些html标签，方便站内查找</p><h2 id="字体字号和颜色">字体字号和颜色</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"微软雅黑"</span>&gt;</span>我是微软雅黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"STCAIYUN"</span>&gt;</span>我是华文彩云<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0099ff</span> <span class="attr">size</span>=<span class="string">6</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>color=#0099ff size=6 face="黑体"<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#00ffff</span> <span class="attr">size</span>=<span class="string">6</span>&gt;</span>color=#00ffff<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">gray</span> <span class="attr">size</span>=<span class="string">6</span>&gt;</span>color=gray<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果如下：</p><p><font face="黑体">我是黑体字</font><font face="微软雅黑">我是微软雅黑</font><font face="STCAIYUN">我是华文彩云</font><font color="#0099ff" size="6" face="黑体">color=#0099ff size=6face="黑体"</font> <font color="#00ffff" size="6">color=#00ffff</font><font color="gray" size="6">color=gray</font></p><blockquote><p>Size:规定了文本尺寸大小，范围1～7，默认为3。颜色为十六进制RGB</p></blockquote><h2 id="图片居中及改变大小">图片居中及改变大小</h2><p>居中：<code>&lt;div alighn=center&gt;</code></p><p>改变图片大小：<code>&lt;img src="图片路径" width="300" height="200" alt="图片" &gt;</code></p><blockquote><p>改变图片大小可能导致图片变形</p></blockquote><h2 id="代办事宜">代办事宜</h2><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> [x] 男</span><br><span class="line"><span class="bullet">*</span> [ ] 女</span><br></pre></td></tr></tbody></table></figure><p>显示效果：</p><ul class="task-list"><li><label><input type="checkbox" checked="">男</label></li><li><label><input type="checkbox">女</label></li></ul><h2 id="页面内跳转">页面内跳转</h2><p>使用heml代码实现。</p><p>在要跳转位置定义一个锚点<code>&lt;span id="jump"&gt;target&lt;/span&gt;</code></p><p>使用<code>[target](#jump)</code>将<code>target</code>设置为一点击就跳转到锚点所在位置</p><p><a href="#jump">target</a></p><p><span id="jump">target</span></p><h2 id="行内缩进">行内缩进</h2><p>半方大的空白<code>&amp;ensp</code>或<code>&amp;#8194</code></p><p>全方大的空白<code>&amp;emsp</code>或<code>&amp;#8195</code></p><p>不断行的空白<code>&amp;nbsp</code>或<code>&amp;#160</code></p><p>间距如下：</p><p> AAA</p><p> AAA</p><p>&nbsp;AAA</p><h2 id="视频嵌套">视频嵌套</h2><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">poster</span>=<span class="string">"http://om2bks7xs.bkt.clouddn.com/2017-08-26-Markdown-Advance-Video.jpg"</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"mp4"</span> <span class="attr">src</span>=<span class="string">"http://om2bks7xs.bkt.clouddn.com/2017-08-26-Markdown-Advance-Video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><video id="video" controls="" preload="none" poster="http://om2bks7xs.bkt.clouddn.com/2017-08-26-Markdown-Advance-Video.jpg"><source id="mp4" src="http://om2bks7xs.bkt.clouddn.com/2017-08-26-Markdown-Advance-Video.mp4" type="video/mp4"></video><h2 id="音频嵌套">音频嵌套</h2><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">id</span>=<span class="string">"audio"</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">preload</span>=<span class="string">"none"</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"mp3"</span> <span class="attr">src</span>=<span class="string">"http://oht4nlntk.bkt.clouddn.com/Music_iP%E8%B5%B5%E9%9C%B2%20-%20%E7%A6%BB%E6%AD%8C%20%28Live%29.mp3"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><audio id="audio" controls="" preload="none"><source id="mp3" src="http://oht4nlntk.bkt.clouddn.com/Music_iP%E8%B5%B5%E9%9C%B2%20-%20%E7%A6%BB%E6%AD%8C%20%28Live%29.mp3"></audio><h2 id="总结">总结</h2><p>以上markdown结合html的语法不常用，在有需求时在查阅即可</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly添加全局吸底Aplayer</title>
      <link href="/posts/c9e95d91/"/>
      <url>/posts/c9e95d91/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>要使用 aplayer，需要安裝 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a>。这款插件通过 Hexo独有的标签外挂，可以很方便的写入一些参数，插件就会帮我们生成对应的html。如果你只是使用一些简单的功能，其实无需使用到这个插件，只需以 html格式书写就行，不用插件去转换。</p><p>例如：</p><p>如果使用插件，在 markdown 中这样写：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% meting "000PeZCQ1i4XVs" "tencent" "artist" "theme:#3F51B5" "mutex:true" "preload:auto" %}</span><br></pre></td></tr></tbody></table></figure><p>其会被插件渲染为:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"aplayer-uxAIfEUs"</span> <span class="attr">class</span>=<span class="string">"aplayer aplayer-tag-marker meting-tag-marker"</span> <span class="attr">data-id</span>=<span class="string">"000PeZCQ1i4XVs"</span> <span class="attr">data-server</span>=<span class="string">"tencent"</span> <span class="attr">data-type</span>=<span class="string">"artist"</span> <span class="attr">data-mode</span>=<span class="string">"circulation"</span> <span class="attr">data-autoplay</span>=<span class="string">"false"</span> <span class="attr">data-mutex</span>=<span class="string">"true"</span> <span class="attr">data-listmaxheight</span>=<span class="string">"340px"</span> <span class="attr">data-preload</span>=<span class="string">"auto"</span> <span class="attr">data-theme</span>=<span class="string">"#3F51B5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>如果不想使用插件，就需要在markdown中用html的格式书写，同时把主题配置文件中的<code>aplayer Inject</code>开启</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aplayer"</span> <span class="attr">data-id</span>=<span class="string">"000PeZCQ1i4XVs"</span> <span class="attr">data-server</span>=<span class="string">"tencent"</span> <span class="attr">data-type</span>=<span class="string">"artist"</span> <span class="attr">data-mutex</span>=<span class="string">"true"</span> <span class="attr">data-preload</span>=<span class="string">"auto"</span> <span class="attr">data-theme</span>=<span class="string">"#3F51B5"</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><p>回到正题，如何在Butterfly上使用全局吸底 Aplayer</p><h2 id="关闭asset_inject">关闭<code>asset_inject</code></h2><blockquote><p>此步骤适用于安装了<code>hexo-tag-aplayer</code>插件的人</p></blockquote><p>由于需要全局都插入 aplayer 和 meting资源，为了防止插入重复的资源，需要把 <code>asset_inject</code>设为false</p><p>在 Hexo 的配置文件中</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h2 id="插入-aplayer-html">插入 Aplayer html</h2><p>为了适配 hexo-tag-aplayer，主题内置的 Meting js 仍为 1.2版本，并非最新的 2.x 版本。</p><p>Aplayer html 例子：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aplayer no-destroy"</span> <span class="attr">data-id</span>=<span class="string">"60198"</span> <span class="attr">data-server</span>=<span class="string">"netease"</span> <span class="attr">data-type</span>=<span class="string">"playlist"</span> <span class="attr">data-fixed</span>=<span class="string">"true"</span> <span class="attr">data-autoplay</span>=<span class="string">"true"</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><p>参数解释：</p><table><colgroup><col style="width: 17%"><col style="width: 9%"><col style="width: 72%"></colgroup><thead><tr><th>option</th><th>default</th><th>description</th></tr></thead><tbody><tr><td>data-id</td><td>require</td><td>song id / playlist id / album id / search keyword</td></tr><tr><td>data-server</td><td>require</td><td>music platform: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>data-type</td><td>require</td><td>song, playlist, album, search, artist</td></tr><tr><td>data-fixed</td><td>false</td><td>enable fixed mode</td></tr><tr><td>data-mini</td><td>false</td><td>enable mini mode</td></tr><tr><td>data-autoplay</td><td>false</td><td>audio autoplay</td></tr><tr><td>data-theme</td><td>#2980b9</td><td>main color</td></tr><tr><td>data-loop</td><td>all</td><td>player loop play, values: 'all', 'one', 'none'</td></tr><tr><td>data-order</td><td>list</td><td>player play order, values: 'list', 'random'</td></tr><tr><td>data-preload</td><td>auto</td><td>values: 'none', 'metadata', 'auto'</td></tr><tr><td>data-volume</td><td>0.7</td><td>default volume, notice that player will remember user setting,default volume will not work after user set volume themselves</td></tr><tr><td>data-mutex</td><td>true</td><td>prevent to play multiple player at the same time, pause otherplayers when this player start play</td></tr><tr><td>data-lrctype</td><td>0</td><td>lyric type</td></tr><tr><td>data-listfolded</td><td>false</td><td>indicate whether list should folded at first</td></tr><tr><td>data-listmaxheight</td><td>340px</td><td>list max height</td></tr><tr><td>data-storagename</td><td>metingjs</td><td>localStorage key that store player setting</td></tr></tbody></table><blockquote><p>require代表着这些参数是必须要使用的，其它的参数则可以根据自己需要配置。</p><p>配置全局吸底，data-fixed 和 data-mini 也必须配置，配置为 true</p><p>如果使用 Pjax，则在 class 裏需添加 no-destroy，这样防止切换页面时Aplayer 被销毁</p></blockquote><p>把 aplayer代碼 插入到主題配置文件的 inject.bottom 去</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class="aplayer</span> <span class="literal">no</span><span class="string">-destroy"</span> <span class="string">data-id="60198"</span> <span class="string">data-server="netease"</span> <span class="string">data-type="playlist"</span> <span class="string">data-fixed="true"</span> <span class="string">data-autoplay="true"&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>运行 Hexo 就可以看到网页左下角出现了 Aplayer</p><p>最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 pjax 设为true</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo完美支持数学公式</title>
      <link href="/posts/c14cd9b1/"/>
      <url>/posts/c14cd9b1/</url>
      
        <content type="html"><![CDATA[<p>按照网上的攻略尝试了几种方法，卸载了Hexo默认渲染插件<code>hexo-renderer-marked</code></p><p>更换了markdown渲染器依旧不能完美显示数学公式</p><p>最终是通过一个大佬的博客，他使用的主题是 NexT 8.10使用了 <a href="https://pandoc.org/installing.html">pandoc</a>来显示数学公式，能够完美支持</p><p>按照他的方法，在Butterfly主题下也安装了pandoc渲染插件<code>hexo-renderer-pandoc</code>发现原来不能显示的数学公式能够完美显示了😆</p><h2 id="安装-hexo-renderer-pandoc">安装 hexo-renderer-pandoc</h2><p>为了使用 pandoc 作为 Hexo 的渲染引擎，我们需要安装插件hexo-renderer-pandoc，步骤如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载Hexo默认渲染插件：</span></span><br><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装pandoc渲染插件：</span></span><br><span class="line">npm install hexo-renderer-pandoc --save</span><br></pre></td></tr></tbody></table></figure><h2 id="配置使用-mathjax">配置使用 mathjax</h2><p>在站点 NexT 配置文件 _config.yml 文件中添加如下配置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Next v6.3.0 后的版本 tags 要设置成 ams</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">ams</span></span><br></pre></td></tr></tbody></table></figure><h2 id="安装-pandoc-软件包">安装 pandoc 软件包</h2><p>从 <a href="https://pandoc.org/installing.html">pandoc</a>官网下载所需要的软件包，我这里使用的 Windows10 + GitBash方式，因此我下载了 Windows 安装包， 安装完毕后，记得重新打开 GitBash命令框 ，不然执行 <strong>Hexo g</strong> 会报错。</p><p>完成后，执行命令，既可以完美显示公式了。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Hexo的Butterfly主题中添加本地搜索功能</title>
      <link href="/posts/2a319798/"/>
      <url>/posts/2a319798/</url>
      
        <content type="html"><![CDATA[<p>在butterfly官网上有三个插件可供选择，分别是Algolia search，Localsearch， Docsearch</p><p>Algoliasearch借助第三方网站algolia，需要在algolia注册账号，并需要执行命令把自己网站的信息上传到algolia，每次搜索都需要请求algolia的数据，网络较慢会导致网址打开速度降低</p><p>Localsearch依靠hexo-generator-search插件是把文章的信息生成一个搜索库放在本地，所以搜索效率很高。</p><p><a href="https://docsearch.algolia.com/?utm_source=artical_gitcode">DocSearch</a>是一款由 Algolia公司提供的专业文档搜索引擎，旨在帮助开发者和内容创作者构建强大、精准且用户体验极佳的文档搜索功能。这款开源工具通过集成先进的搜索算法，使用户能够轻松地在大量技术文档中找到所需信息。</p><p>本文仅针对Local search进行配置</p><h2 id="安装hexo-generator-search插件">安装hexo-generator-search插件：</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></tbody></table></figure><h2 id="配置插件">配置插件：</h2><p><del>### 配置_config.yml，添加以下内容</del></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></tbody></table></figure><p><del>其中，path为生成的搜索文件名，field指定搜索的对象（可以是post或page），format指定搜索结果的格式，limit指定最多显示的搜索结果数量。</del></p><h3 id="配置_config.butterfly.yml修改以下内容">配置_config.butterfly.yml修改以下内容</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></tbody></table></figure><h2 id="生成搜索文件">生成搜索文件：</h2><p>在Hexo博客目录下，运行以下命令生成搜索文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></tbody></table></figure><p>完成以上步骤后，Hexo博客就可以使用站内搜索功能了。在博客中输入关键字进行搜索，并查看搜索结果页面。</p><p>需要注意的是插件官网的配置中有个template配置，无需配置该项。配置了反而无法正常搜索。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法速查表</title>
      <link href="/posts/923759ea/"/>
      <url>/posts/923759ea/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown">Markdown</h1><figure><img src="https://www.runoob.com/wp-content/uploads/2019/03/iconfinder_markdown_298823.png" alt="img"><figcaption aria-hidden="true">img</figcaption></figure><p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <strong>.md</strong>,<strong>.markdown</strong>。</p><h2 id="markdown-应用">Markdown 应用</h2><p>Markdown 能被使用来撰写电子书，如：Gitbook。</p><p>当前许多网站都广泛使用 Markdown来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、StackExchange、OpenStreetMap 、SourceForge等。</p><h2 id="markdown-标题">Markdown 标题</h2><ol type="1"><li><p>使用 = 和 - 标记一级和二级标题</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我展示的是一级标题</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">我展示的是二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></tbody></table></figure><p>显示效果如下：</p><h1 id="我展示的是一级标题">我展示的是一级标题</h1><h2 id="我展示的是二级标题">我展示的是二级标题</h2></li><li><p>使用 # 号标记</p><p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个<strong>#</strong> 号，二级标题对应两个 <strong>#</strong>号，以此类推。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></tbody></table></figure><p>显示效果如下：</p><h1 id="一级标题">一级标题</h1><h2 id="二级标题">二级标题</h2><h3 id="三级标题">三级标题</h3><h4 id="四级标题">四级标题</h4><h5 id="五级标题">五级标题</h5><h6 id="六级标题">六级标题</h6></li></ol><h2 id="markdown-段落">Markdown 段落</h2><p>Markdown段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用两个以上空格加上回车</strong>。</p><h3 id="字体">字体</h3><p>Markdown 可以使用以下几种字体：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="emphasis">_斜体文本_</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">__粗体文本__</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本*</span>**</span></span><br><span class="line"><span class="strong">__<span class="emphasis">_粗斜体文本_</span>__</span></span><br></pre></td></tr></tbody></table></figure><p>显示效果如下所示：</p><p><em>斜体文本</em> <em>斜体文本</em> <strong>粗体文本</strong><strong>粗体文本</strong> <strong><em>粗斜体文本</em></strong><strong><em>粗斜体文本</em></strong></p><h3 id="分隔线">分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">* * *</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">**</span><span class="strong">***</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">- - -</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">----------</span></span><br></pre></td></tr></tbody></table></figure><p>显示效果如下所示：</p><hr><hr><hr><hr><hr><h3 id="删除线">删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线<strong>~~</strong> 即可，实例如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RUNOOB.COM</span><br><span class="line">GOOGLE.COM</span><br><span class="line">~~BAIDU.COM~~</span><br></pre></td></tr></tbody></table></figure><p>显示效果如下所示：</p><p>RUNOOB.COM GOOGLE.COM</p><p><del>BAIDU.COM</del></p><h3 id="下划线">下划线</h3><p>下划线可以通过 HTML 的 <strong><u></u></strong><u> 标签来实现：</u></p><u><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>带下划线文本<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><p>显示效果如下所示：</p><p><u>带下划线文本</u></p><h3 id="脚注">脚注</h3><p>脚注是对文本的补充说明。</p><p>Markdown 脚注的格式如下:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[^要注明的文本]</span><br></pre></td></tr></tbody></table></figure><p>以下实例演示了脚注的用法：</p><blockquote><p>创建脚注格式类似这样 <a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>。</p></blockquote><h2 id="markdown-列表">Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*****)、加号(<strong>+</strong>)或是减号(<strong>-</strong>)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></tbody></table></figure><ul><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项</p></li><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项</p></li><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项</p></li></ul><p>有序列表使用数字并加上 <strong>.</strong> 号来表示，如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></tbody></table></figure><ol type="1"><li>第一项</li><li>第二项</li><li>第三项</li></ol><h3 id="列表嵌套">列表嵌套</h3><p>列表嵌套只需在子列表中的选项前面添加两个或四个空格即可：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></tbody></table></figure><ol type="1"><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h2 id="markdown-区块">Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号，然后后面紧跟一个<strong>空格</strong>符号：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 区块引用</span></span><br><span class="line"><span class="quote">&gt; 菜鸟教程</span></span><br><span class="line"><span class="quote">&gt; 学的不仅是技术更是梦想</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><blockquote><p>区块引用 菜鸟教程 学的不仅是技术更是梦想</p></blockquote><p>另外区块是可以嵌套的，一个 <strong>&gt;</strong> 符号是最外层，两个<strong>&gt;</strong> 符号是第一层嵌套，以此类推：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层</span></span><br><span class="line"><span class="quote">&gt; &gt; 第一层嵌套</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第二层嵌套</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><blockquote><p>最外层 &gt; 第一层嵌套 &gt; &gt; 第二层嵌套</p></blockquote><h3 id="区块中使用列表">区块中使用列表</h3><p>区块中使用列表实例如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第三项</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><blockquote><p>区块中使用列表 1. 第一项 2. 第二项 + 第一项 + 第二项 + 第三项</p></blockquote><h3 id="列表中使用区块">列表中使用区块</h3><p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong>前添加四个空格的缩进。</p><p>列表中使用区块实例如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="code">    &gt; 菜鸟教程</span></span><br><span class="line"><span class="code">    &gt; 学的不仅是技术更是梦想</span></span><br><span class="line"><span class="code">* 第二项</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><ul><li>第一项 &gt; 菜鸟教程 &gt; 学的不仅是技术更是梦想</li><li>第二项</li></ul><h2 id="markdown-代码">Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（<strong>`</strong>），例如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`printf()`</span> 函数</span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p><code>printf()</code> 函数</p><h3 id="代码区块">代码区块</h3><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab键）</strong>。</p><p>实例如下：</p><p>​ <!--?php​   echo 'RUNOOB'​   function test ( ) {​      echo  ' test ' ;​   }    <?php    echo 'RUNOOB'    function test(){      echo 'test';    }你也可以用 **```** 包裹一段代码，并指定一种语言（也可以不指定）：<figure class="highlight markdown"--><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">$(document).ready(function () {</span></span><br><span class="line"><span class="code">    alert('RUNOOB');</span></span><br><span class="line"><span class="code">});</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></tbody></table></p><p>显示结果如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">'RUNOOB'</span>);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><h2 id="markdown-链接">Markdown 链接</h2><p>链接使用方法如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址</span>)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></tbody></table></figure><p>例如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接 [<span class="string">菜鸟教程</span>](<span class="link">https://www.runoob.com</span>)</span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p>这是一个链接 <a href="https://www.runoob.com">菜鸟教程</a></p><p>直接使用链接地址：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">&lt;https://www.runoob.com&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p><a href="https://www.runoob.com" class="uri">https://www.runoob.com</a></p><h3 id="高级链接">高级链接</h3><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [<span class="string">Google</span>][<span class="symbol">1</span>]</span><br><span class="line">这个链接用 runoob 作为网址变量 [<span class="string">Runoob</span>][<span class="symbol">runoob</span>]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [runoob]: http://www.runoob.com/</span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p>这个链接用 1 作为网址变量 <a href="https://static.jyshare.com/images/runoob-logo.png">Google</a>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a>然后在文档的结尾为变量赋值（网址）</p><h2 id="markdown-图片">Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址 "可选标题"</span>)</span><br></pre></td></tr></tbody></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的'title' 属性的文字。</li></ul><p>使用实例：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">https://static.jyshare.com/images/runoob-logo.png</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">https://static.jyshare.com/images/runoob-logo.png "RUNOOB"</span>)</span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><figure><img src="https://static.jyshare.com/images/runoob-logo.png" alt="RUNOOB 图标"><figcaption aria-hidden="true">RUNOOB 图标</figcaption></figure><figure><img src="https://static.jyshare.com/images/runoob-logo.png" title="RUNOOB" alt="RUNOOB 图标"><figcaption aria-hidden="true">RUNOOB 图标</figcaption></figure><p>当然，你也可以像网址那样对图片网址使用变量:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [<span class="string">RUNOOB</span>][<span class="symbol">1</span>].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">https://static.jyshare.com/images/runoob-logo.png</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p>这个链接用 1 作为网址变量 <a href="https://static.jyshare.com/images/runoob-logo.png">RUNOOB</a>.然后在文档的结尾为变量赋值（网址）</p><p>Markdown还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img>标签。</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://static.jyshare.com/images/runoob-logo.png"</span> <span class="attr">width</span>=<span class="string">"50%"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>显示结果如下：</p><p><img src="https://static.jyshare.com/images/runoob-logo.png" width="50%"></p><h2 id="markdown-表格">Markdown 表格</h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用<strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></tbody></table></figure><p>以上代码显示结果如下：</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>对齐方式</p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></tbody></table></figure><p>以上代码显示结果如下：</p><table><thead><tr><th style="text-align: left;">左对齐</th><th style="text-align: right;">右对齐</th><th style="text-align: center;">居中对齐</th></tr></thead><tbody><tr><td style="text-align: left;">单元格</td><td style="text-align: right;">单元格</td><td style="text-align: center;">单元格</td></tr><tr><td style="text-align: left;">单元格</td><td style="text-align: right;">单元格</td><td style="text-align: center;">单元格</td></tr></tbody></table><h2 id="markdown-高级技巧">Markdown 高级技巧</h2><h3 id="支持的-html-元素">支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML撰写。</p><p>目前支持的 HTML元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等，如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h3 id="转义">转义</h3><p>Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\<span class="emphasis">*\*</span> 正常显示星号 \<span class="emphasis">*\*</span></span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><p><strong>文本加粗</strong> ** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">{}  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></tbody></table></figure><h3 id="公式">公式</h3><p><strong>Markdown Preview Enhanced</strong> 使用 <a href="https://github.com/Khan/KaTeX">KaTeX</a> 或者 <a href="https://github.com/mathjax/MathJax">MathJax</a>来渲染数学表达式。</p><p>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax拥有的特性。你可以查看 KaTeX supported functions/symbols 来了解 KaTeX支持那些符号和函数。</p><p>默认下的分隔符：</p><ul><li><code>$...$</code> 或者 <code>\(...\)</code>中的数学表达式将会在行内显示。</li><li><code>$$...$$</code> 或者 <code>\[...\]</code> 或者```<code>math</code> 中的数学表达式将会在块内显示。</li></ul><figure><img src="https://www.runoob.com/wp-content/uploads/2019/03/0e408954-fda8-11e5-9eb4-562d7c0ca431.gif" alt="0e408954-fda8-11e5-9eb4-562d7c0ca431"><figcaption aria-hidden="true">0e408954-fda8-11e5-9eb4-562d7c0ca431</figcaption></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin{Bmatrix}</span><br><span class="line">   a &amp; b \\</span><br><span class="line">   c &amp; d</span><br><span class="line">\end{Bmatrix}</span><br><span class="line">$$</span><br><span class="line">$$</span><br><span class="line">\begin{CD}</span><br><span class="line">   A @&gt;a&gt;&gt; B \\</span><br><span class="line">@VbVV @AAcA \\</span><br><span class="line">   C @= D</span><br><span class="line">\end{CD}</span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><p>输出结果如下： <span class="math display">\[\begin{Bmatrix}   a &amp; b \\   c &amp; d\end{Bmatrix}\]</span> <span class="math display">\[\begin{CD}   A @&gt;a&gt;&gt; B \\@VbVV @AAcA \\   C @= D\end{CD}\]</span></p><section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes"><hr><ol><li id="fn1"><p>菜鸟教程 -- 学的不仅是技术，更是梦想！！！<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section></u>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo更换Markdown渲染器</title>
      <link href="/posts/5fc4ef39/"/>
      <url>/posts/5fc4ef39/</url>
      
        <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>在写博客时，往往会设计一些数学公式，当你需要使用LaTeX语法时，由于Hexo默认的markdown渲染器（<code>hexo-renderer-marked</code>）不支持复杂公式，导致渲染失败，这时候就需要更换markdown渲染器。</p><h2 id="卸载markdown渲染器">卸载markdown渲染器</h2><p>卸载默认的markdown渲染器</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></tbody></table></figure><h1 id="推荐的markdown渲染器">推荐的markdown渲染器</h1><p>下面推荐几种常见的markdown渲染器，你可以在Hexo插件中找到它们</p><p>你也可以在 <a href="https://www.npmjs.com/search?q=hexo-renderer-markdown">这里</a>查看更多的版本。</p><ul><li><p><strong><a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a></strong></p><blockquote><p>Hexo默认的markdown渲染器，不支持mathjax，不支持插件扩展，不支持emoji表情</p></blockquote></li></ul><p>项目地址：<a href="https://github.com/hexojs/hexo-renderer-marked" class="uri">https://github.com/hexojs/hexo-renderer-marked</a></p><p>安装命令：<code>npm install hexo-renderer-marked --save</code></p><ul><li><p><strong><a href="https://github.com/sun11/hexo-renderer-kramed">hexo-renderer-kramed</a></strong></p><blockquote><p>基于hexo-renderer-marked，支持Mathjax，不支持插件的扩展，不支持emoji的表情</p></blockquote></li></ul><p>项目地址：<a href="https://github.com/sun11/hexo-renderer-kramed" class="uri">https://github.com/sun11/hexo-renderer-kramed</a></p><p>安装命令：<code>npm install hexo-renderer-kramed --save</code></p><ul><li><p><strong><a href="https://github.com/hexojs/hexo-renderer-markdown-it">hexo-renderer-markdown-it</a></strong></p><blockquote><p>渲染速度比hexo-renderer-marked快，支持脚注（上标，下标，下滑线），支持emoji表情，支持LaTeX，扩展需要另外通过npm安装</p></blockquote></li></ul><p>项目地址：<a href="https://github.com/hexojs/hexo-renderer-markdown-it" class="uri">https://github.com/hexojs/hexo-renderer-markdown-it</a></p><p>安装命令：<code>npm i hexo-renderer-markdown-it --save</code></p><ul><li><p><strong><a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus">hexo-renderer-markdown-it-plus</a></strong></p><blockquote><p>在hexo-renderer-markdown-it的基础上默认自带许多插件，可以直接使用</p></blockquote></li></ul><p>项目地址：<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" class="uri">https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus</a></p><p>安装命令：<code>npm i hexo-renderer-markdown-it-plus --save</code></p><h1 id="总结">总结</h1><p>以上插件选择合适的即可，一股脑的安装只会导越来越臃肿。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题-一图流及顶部图修改</title>
      <link href="/posts/fc6d92ff/"/>
      <url>/posts/fc6d92ff/</url>
      
        <content type="html"><![CDATA[<h2 id="主题配置">主题配置</h2><p>修改 <a href="https://butterfly.js.org/">Butterfly</a> 的配置文件<code>_config.butterfly.yml</code>。</p><p>编辑<code>index_img</code>、<code>index_top_img_height</code>、<code>background</code>、<code>footer_bg</code>、<code>mask.header</code>选项。设置网站背景，将主页顶部图和页脚背景改为透明，调整主页顶部图高度，移除顶部图的黑色半透遮罩。<em>(需要将示例地址替换为自己的图片地址。)</em></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Image (圖片設置)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Beautify/Effect (美化/效果)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The height of top_img, eg: 300px/300em/300rem (主頁top_img高度)</span></span><br><span class="line"><span class="attr">index_top_img_height:</span> <span class="string">400px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://example.com/img/background.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add mask to header or footer (为 header 或 footer 添加黑色半透遮罩)</span></span><br><span class="line"><span class="attr">mask:</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h2 id="引入相关样式">引入相关样式</h2><p>新建一个文件，位于<code>source/css/modify.styl</code>，并增加以下内容。<em>(此处只是举例，也可以使用已有的样式文件。)</em></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@import</span> <span class="string">'nib'</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">顶部图</span></span><br><span class="line"><span class="comment">#page-header</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">transparent</span> <span class="type">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&amp;.post-bg,</span> <span class="string">&amp;.not-home-page</span></span><br><span class="line">    <span class="attr">height:</span> <span class="string">280px</span> <span class="type">!important</span></span><br><span class="line">  <span class="comment">#post-info</span></span><br><span class="line">    <span class="attr">bottom:</span> <span class="string">40px</span> <span class="type">!important</span></span><br><span class="line">    <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">  <span class="comment">#page-site-info</span></span><br><span class="line">    <span class="attr">top:</span> <span class="string">140px</span> <span class="type">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="string">@media</span> <span class="attr">screen and (max-width:</span> <span class="string">768px)</span></span><br><span class="line">    <span class="string">&amp;.not-home-page</span></span><br><span class="line">      <span class="attr">height:</span> <span class="string">200px</span> <span class="type">!important</span></span><br><span class="line">    <span class="comment">#post-info</span></span><br><span class="line">      <span class="attr">bottom:</span> <span class="string">10px</span> <span class="type">!important</span></span><br><span class="line">    <span class="comment">#page-site-info</span></span><br><span class="line">      <span class="attr">top:</span> <span class="string">100px</span> <span class="type">!important</span></span><br><span class="line"></span><br><span class="line"><span class="string">.top-img</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">250px</span></span><br><span class="line">  <span class="attr">margin:</span> <span class="string">-50px</span> <span class="string">-40px</span> <span class="string">50px</span></span><br><span class="line">  <span class="attr">border-top-left-radius:</span> <span class="string">inherit</span></span><br><span class="line">  <span class="attr">border-top-right-radius:</span> <span class="string">inherit</span></span><br><span class="line">  <span class="attr">background-position:</span> <span class="string">center</span> <span class="string">center</span></span><br><span class="line">  <span class="attr">background-size:</span> <span class="string">cover</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="string">all</span> <span class="number">0.</span><span class="string">3s</span></span><br><span class="line"></span><br><span class="line">  <span class="string">@media</span> <span class="attr">screen and (max-width:</span> <span class="string">768px)</span></span><br><span class="line">    <span class="attr">height:</span> <span class="string">230px</span></span><br><span class="line">    <span class="attr">margin:</span> <span class="string">-36px</span> <span class="string">-14px</span> <span class="string">36px</span></span><br><span class="line"></span><br><span class="line">  [<span class="string">data-theme='dark'</span>] <span class="string">&amp;</span></span><br><span class="line">    <span class="attr">filter:</span> <span class="string">brightness(0.8)</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">页脚</span></span><br><span class="line"><span class="comment">#footer:before</span></span><br><span class="line">  <span class="attr">background-color:</span> <span class="string">alpha(#FFF,</span> <span class="number">.5</span><span class="string">)</span></span><br><span class="line"></span><br><span class="line">  [<span class="string">data-theme='dark'</span>] <span class="string">&amp;</span></span><br><span class="line">    <span class="attr">background-color:</span> <span class="string">alpha(#000,</span> <span class="number">.5</span><span class="string">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#footer-wrap, #footer-wrap a</span></span><br><span class="line">  <span class="attr">color:</span> <span class="comment">#111</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="string">unset</span></span><br><span class="line"></span><br><span class="line">  [<span class="string">data-theme='dark'</span>] <span class="string">&amp;</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">var(--light-grey)</span></span><br></pre></td></tr></tbody></table></figure><p>修改 <a href="https://butterfly.js.org/">Butterfly</a> 的配置文件<code>_config.butterfly.yml</code>，在 <code>inject.head</code>选项引入样式。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># other (其他)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before '&lt;/head&gt;' tag) and the bottom (before '&lt;/body&gt;' tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/modify.css"&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>Hexo 会将 Stylus 渲染成 CSS 文件，所以此处应为<code>modify.css</code>。</p><h2 id="增加插件脚本">增加插件脚本</h2><p>因为使用了 <code>cheerio</code> 来解析HTML，所以需要先安装此依赖。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cheerio</span><br></pre></td></tr></tbody></table></figure><p>新建一个文件，位于 <code>scripts/modify.js</code>，并增加以下内容。<em>(此处只是举例，也可以使用已有的插件脚本文件。)</em></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> { filter } = hexo.<span class="property">extend</span>;</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在页面插入新顶部图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> {<span class="type">cheerio.Root</span>} $ Root</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertTopImg</span>(<span class="params">$</span>) {</span><br><span class="line">    <span class="keyword">const</span> header = $(<span class="string">'#page-header'</span>);</span><br><span class="line">    <span class="keyword">if</span> (header.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> background = header.<span class="title function_">css</span>(<span class="string">'background-image'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!background) <span class="keyword">return</span>;</span><br><span class="line">    $(<span class="string">'#post, #page, #archive, #tag, #category'</span>).<span class="title function_">prepend</span>(<span class="string">`&lt;div class="top-img" style="background-image: <span class="subst">${background}</span>;"&gt;&lt;/div&gt;`</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 HTML</span></span><br><span class="line">filter.<span class="title function_">register</span>(<span class="string">'after_render:html'</span>, <span class="function">(<span class="params">str, data</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">const</span> $ = cheerio.<span class="title function_">load</span>(str, {</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">    });</span><br><span class="line">    <span class="title function_">insertTopImg</span>($);</span><br><span class="line">    <span class="keyword">return</span> $.<span class="title function_">html</span>();</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><h2 id="大功告成">大功告成</h2><p>👏 恭喜你完成了修改，可以使用以下命令进行预览。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></tbody></table></figure><h2 id="后记">后记</h2><p>其实早些时候，有篇最终效果类似的修改教程。 是<a href="https://www.imcharon.com/"><span class="citation" data-cites="Nesxc">@Nesxc</span></a> 大佬写的「<a href="https://www.imcharon.com/60/">butterfly文章页美化教程</a>」。他是通过修改主题源文件的方式实现的。 本篇是采用 Hexo 的 <a href="https://hexo.io/zh-cn/docs/plugins">插件</a> 系统实现的。</p><p>插件版的优点是更新主题时，只要结构变化不大，无需任何操作即可继续使用。并且在管理上也方便。源文件版的优点是效率会略高一点，毕竟是直接修改的主题源文件。</p><p>如果不想每次升级主题都可能要重新改一遍，或是为了方便管理，则可以选择插件版。如果本来就修改了源文件，也不介意再多修改这一个，则可以选择源文件版</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Front-Matter介绍</title>
      <link href="/posts/631c6c3a/"/>
      <url>/posts/631c6c3a/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>Front-matter是markdown上以---分割的区域，用于制定当前文章的参数</p><ul><li><p>page front-matter：用于单独页面配置</p></li><li><p>post front-matter：用于文章页配置</p></li></ul><h1 id="hexo-page-front-matter详解">Hexo Page Front-matter详解</h1><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>配置默认参数选项</th><th>默认值</th><th>配置选项参数说明</th></tr></thead><tbody><tr><td>title</td><td></td><td>必需，标题</td></tr><tr><td>date</td><td></td><td>必需，日期</td></tr><tr><td>type</td><td></td><td>必需，标签，分类，友情链接需配置</td></tr><tr><td>updated</td><td></td><td>可选，页面更新日期</td></tr><tr><td>description</td><td></td><td>可选，页面描述</td></tr><tr><td>keywords</td><td></td><td>可选，页面关键字</td></tr><tr><td>comments</td><td>true</td><td>可选，评论模块</td></tr><tr><td>top_img</td><td>false</td><td>可选，顶部图</td></tr><tr><td>mathjax</td><td>false</td><td>可选，mathjax模块</td></tr><tr><td>katex</td><td>false</td><td>可选，katex模块</td></tr><tr><td>aside</td><td>true</td><td>可选，侧边栏</td></tr><tr><td>aplayer</td><td></td><td>可选，在需要的页面加载aplayer的js和css</td></tr><tr><td>highlight_shrink</td><td></td><td>可选，代码框是否展开</td></tr></tbody></table><blockquote><p>front-matter选项中所有内容均为非必填。建议至少填写title和date值</p></blockquote><h1 id="hexo-post-front-matter详解">Hexo Post Front-matter详解</h1><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><table><colgroup><col style="width: 24%"><col style="width: 18%"><col style="width: 56%"></colgroup><thead><tr><th>配置选项参数名称</th><th>默认值</th><th>配置选项参数说明</th></tr></thead><tbody><tr><td>title</td><td>markdown文件标题</td><td>必需，文章标题，强烈建议填写</td></tr><tr><td>date</td><td>文件创建日期</td><td>必需，文章创建日期，强烈建议填写</td></tr><tr><td>updated</td><td>文件更新日期</td><td>可选，文章更新日期</td></tr><tr><td>tags</td><td>无</td><td>可选，文章标签，可多个标签</td></tr><tr><td>categories</td><td>无</td><td>可选，文章分类，建议一篇文章仅一个分类</td></tr><tr><td>keywords</td><td>文章关键字</td><td>可选，文章关键字，SEO需要</td></tr><tr><td>description</td><td>文章描述</td><td>可选，文章描述</td></tr><tr><td>top_img</td><td>无</td><td>可选，文章顶部图片，推荐使用图床</td></tr><tr><td>cover</td><td>false</td><td>可选，文章缩略图（可设置为false，图片地址，留空）</td></tr><tr><td>comments</td><td>true</td><td>可选，显示文章评论</td></tr><tr><td>toc</td><td>toc的enable配置</td><td>可选，显示文章toc</td></tr><tr><td>toc_number</td><td>toc的number配置</td><td>可选，显示toc_number</td></tr><tr><td>toc_style_simple</td><td></td><td>可选，toc简介模式</td></tr><tr><td>copyright</td><td>true</td><td>可选，显示文章版权模块</td></tr><tr><td>copyright_anthor</td><td></td><td>可选，文章版权模块的文章作者</td></tr><tr><td>copyright_anthor_href</td><td></td><td>可选，文章版权模块的作者连接链接</td></tr><tr><td>copyright_url</td><td></td><td>可选，文章版权模块的文章连接链接</td></tr><tr><td>copyright_info</td><td></td><td>可选，文章版权模块版权声明文字</td></tr><tr><td>mathjax</td><td>false</td><td>可选，显示mathjax</td></tr><tr><td>katex</td><td>false</td><td>可选，显示katex</td></tr><tr><td>aplayer</td><td>无</td><td>可选，加载aplayer的js和css</td></tr><tr><td>highlight_shrink</td><td></td><td>可选，配置代码框是否展开</td></tr><tr><td>aside</td><td>true</td><td>可选，显示侧边栏</td></tr></tbody></table><blockquote><p>front-matter选项中所有内容均为非必填。建议至少填写title和date值</p></blockquote><p>注意；</p><blockquote><p>如果top_img不填写，文章特色图片会根据文章标题的hashcode值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图各有特色</p><p>date值尽量保证每篇文章是唯一的，因为某些主题中Gitalk和Gitment识别id是通过date的值来作为唯一标识的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常用命令</title>
      <link href="/posts/33f59116/"/>
      <url>/posts/33f59116/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo常用命令列表">hexo常用命令列表</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo init                   <span class="comment"># 初始化一个本地文件夹为网站的根目录</span></span><br><span class="line">hexo new <span class="string">"postName"</span>         <span class="comment"># 新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span>    <span class="comment"># 新建页面</span></span><br><span class="line">hexo generate               <span class="comment"># 生成静态页面至public目录</span></span><br><span class="line">hexo server                 <span class="comment"># 开启预览访问端口（默认端口4000，'Ctrl + C'关闭server）</span></span><br><span class="line">hexo deploy                 <span class="comment"># 部署到GitHub或Gitee服务器上</span></span><br><span class="line">hexo clean                  <span class="comment"># 清理缓存文件</span></span><br><span class="line">hexo <span class="built_in">help</span>                   <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version                <span class="comment"># 查看Hexo的版本</span></span><br></pre></td></tr></tbody></table></figure><h1 id="hexo常用命令说明">Hexo常用命令说明</h1><h2 id="初始化一个本地文件夹作为根目录">初始化一个本地文件夹作为根目录</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></tbody></table></figure><p>详见：<a href="https://hexo.io/zh-cn/docs/setup" class="uri">https://hexo.io/zh-cn/docs/setup</a></p><h2 id="新建一篇文章">新建一篇文章</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hexo.io/zh-cn/docs/setup</span><br></pre></td></tr></tbody></table></figure><h2 id="生成静态文件">生成静态文件</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></tbody></table></figure><p>详情：<a href="https://hexo.io/zh-cn/docs/generating.html" class="uri">https://hexo.io/zh-cn/docs/generating.html</a></p><h2 id="启动本地服务器">启动本地服务器</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-p    选项，指定服务器端口，默认为 4000</span><br><span class="line">-i    选项，指定服务器 IP 地址，默认为 0.0.0.0</span><br><span class="line">-s    选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件监视</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="部署网站">部署网站</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>详情：<a href="https://hexo.io/zh-cn/docs/one-command-deployment.html" class="uri">https://hexo.io/zh-cn/docs/one-command-deployment.html</a></p><h2 id="清理缓存文件">清理缓存文件</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></tbody></table></figure><h2 id="监视文件变动">监视文件变动</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --watch</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Hexo能购监视文件变动并立刻重新生成静态文件，再生成时对比文件的 SHA1checksum，只有变动的文件会写入</p></blockquote><h1 id="hexo符合命令说明">Hexo符合命令说明</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy -g          <span class="comment"># 生成加部署</span></span><br><span class="line">hexo d -g               <span class="comment"># 生成加部署</span></span><br><span class="line">hexo server -g          <span class="comment"># 生成加预览</span></span><br><span class="line">hexo s -g               <span class="comment"># 生成加预览</span></span><br></pre></td></tr></tbody></table></figure><h1 id="hexo命令简写说明">Hexo命令简写说明</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n  == hexo new</span><br><span class="line">hexo g  == hexo generate</span><br><span class="line">hexo s  == hexo server</span><br><span class="line">hexo d  == hexo deploy</span><br><span class="line">hexo cl == hexo clean</span><br></pre></td></tr></tbody></table></figure><p>xo clean</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo和Github搭建个人博客</title>
      <link href="/posts/787e6168/"/>
      <url>/posts/787e6168/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>基于Hexo+Github搭建个人博客</p><h1 id="环境配置">环境配置</h1><blockquote><p>所需工具： node.js、npm、git</p></blockquote><p>node.js: <a href="https://nodejs.org/zh-cn" class="uri">https://nodejs.org/zh-cn</a></p><p>git: <a href="https://git-scm.com/downloads" class="uri">https://git-scm.com/downloads</a></p><p>安装完成后，在终端下输入一下命令查看版本，以此判断是否安装成功</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></tbody></table></figure><h1 id="连接github">连接GitHub</h1><p>打开终端，输入命令设置用户名和邮箱</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"Github用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"Github邮箱"</span></span><br></pre></td></tr></tbody></table></figure><p>创建SSH密钥</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"Github邮箱"</span></span><br></pre></td></tr></tbody></table></figure><p>mac生成到/Users/用户名/.shh目录，查看id_ras.pub公钥内容并复制文件内容</p><p>添加公钥内容到Github：Seeting -&gt; SSH and GPG keys -&gt; New SSHkey</p><p>验证连接：</p><blockquote><p>打开终端，输入<code>ssh -T git@Github.com</code></p><p>显示 "Hi MaritimeByte! You've successfully authenticated, but GitHubdoes not provide shell access."</p><p>连接成功</p></blockquote><h1 id="创建-github-pages">创建 GitHub Pages</h1><ol type="1"><li>在任何页面的右上角，选择 ，然后单击“新建存储库”</li><li>存储库必须命名为 <code>&lt;user&gt;.github.io</code></li><li>选择“使用 README 初始化此存储库”。</li><li>单击“创建存储库”</li></ol><h1 id="本地安装hexo博客程序">本地安装Hexo博客程序</h1><p>默认代理为https://registry.npmjs.org/，需要梯子才能访问</p><p>修改代理</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure><p>安装Hexo</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><p>macOS会存在全局安装和本地安装问题，可使用npx解决npm无法调用hexo的问题</p><h1 id="hexo初始化和本地预览">hexo初始化和本地预览</h1><p>初始化及安装组件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init       <span class="comment"># 初始化</span></span><br><span class="line">npm install     <span class="comment"># 安装组件</span></span><br></pre></td></tr></tbody></table></figure><p>启动本地服务进行预览</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g          <span class="comment"># 生成页面</span></span><br><span class="line">hexo s          <span class="comment"># 启动预览</span></span><br></pre></td></tr></tbody></table></figure><p>博客目录结构</p><blockquote><ul><li>.</li><li>_config.landscape.yml</li><li>_config.yml</li><li>node_modules</li><li>package-lock.json</li><li>package-json</li><li>scaffolds</li><li>source</li><li>themes</li></ul></blockquote><ul><li>_config.yml：全局配置文件，比如网站名称，副标题，秒速，作者，语言等。</li><li>scaffolds：骨架文件，生成新页面或者新博客的模版。可根据需求修改，当hexo生成新博客时，会用这里面的模版进行初始化</li><li>source：存放markdown源文件，里面有一个_post文件夹，所有的。md博客文件都会存放在这，初始存在一个hello-world.md文件</li><li>themes：网站主题目录存放主题文件，更多主题查看：<a href="https://hexo.io/themes/" class="uri">https://hexo.io/themes/</a></li></ul><h1 id="部署hexo到githubpages">部署Hexo到GitHubPages</h1><p>安装hexo- deploy-git：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>修改_config.yml文件末尾的Deployment部分，如下</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@Github.com:用户名/用户名.Github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><p>运行 <code>hexo d</code>部署</p><p>mac可能需要使用<code>npx hexo deploy</code>部署</p><p>恭喜🎉，你的博客已经部署到github上，可通过https://用户名.github.io访问了</p><h1 id="发布第一篇文章">发布第一篇文章</h1><p>在blog根目录下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(npx) hexo new <span class="string">"First post"</span></span><br></pre></td></tr></tbody></table></figure><p>source目录下会生成一个名为First post.md文件</p><p>也可在post文件夹下直接生成md文件，如例：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 基于Hexo + Github搭建个人博客</span><br><span class="line"><span class="built_in">date</span>: 2022-11-06 07:35:15</span><br><span class="line">tags:</span><br><span class="line">  - other</span><br><span class="line">keywords:</span><br><span class="line">  - hexo</span><br><span class="line">  - Github</span><br><span class="line">  - blog</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>恭喜🎉你完成了最后的一步，你Hexo博客的已经搭建成功啦！！！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a>d-deployment.html)</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
